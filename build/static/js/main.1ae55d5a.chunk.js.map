{"version":3,"sources":["components/common/Navigation.js","modules/loading.js","lib/api/createRequestSaga.js","lib/api/client.js","modules/member.js","lib/api/member.js","containers/common/NavigationContainer.js","components/common/PageTemplate.js","components/Home.js","pages/HomePage.js","components/common/CentralTemplate.js","lib/error/toErrorMessage.js","components/member/MemberForm.js","components/common/Loading.js","containers/member/SignupForm.js","lib/error/isValidEmail.js","pages/member/SignupPage.js","containers/member/VerifyForm.js","pages/member/VerifyPage.js","containers/member/LoginForm.js","pages/member/LoginPage.js","components/member/MemberInfo.js","modules/accountant.js","lib/api/accountant.js","containers/member/MemberInfoContainer.js","pages/member/MyPage.js","containers/member/ForgetForm.js","pages/member/ForgetPage.js","components/accountant/AccountForm.js","containers/accountant/AccountFormContainer.js","pages/accountant/AccountFormPage.js","components/accountant/AccountList.js","containers/accountant/AccountListContainer.js","pages/accountant/AccountListPage.js","components/accountant/Account.js","containers/accountant/AccountContainer.js","pages/accountant/AccountPage.js","components/accountant/TransactionForm.js","containers/accountant/TransactionFormContainer.js","pages/accountant/TransactionPage.js","components/accountant/Ledger.js","containers/accountant/LedgerContainer.js","pages/accountant/LedgerPage.js","components/accountant/BalanceSheet.js","containers/accountant/BalanceSheetContainer.js","pages/accountant/BalanceSheetPage.js","components/accountant/IncomeStatementForm.js","containers/accountant/IncomeStatementFormContainer.js","pages/accountant/IncomeStatementFormPage.js","components/accountant/IncomeStatement.js","containers/accountant/IncomeStatementContainer.js","pages/accountant/IncomeStatementPage.js","components/NotFound.js","pages/NotFoundPage.js","components/common/ServiceInformation.js","App.js","modules/index.js","index.js"],"names":["Navigation","jwt","onClickLogout","className","to","onClick","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","action","payload","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","error","client","axios","create","memberSaga","SET_REFRESH_TOKEN","CHANGE_FIELD","INITIALIZE_FORM","LOGOUT","MEMBER_INDEX","MEMBER_INDEX_SUCCESS","MEMBER_INDEX_FAILURE","SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAILURE","VERIFY","VERIFY_SUCCESS","VERIFY_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","RENEW","RENEW_SUCCESS","RENEW_FAILURE","FORGET","FORGET_SUCCESS","FORGET_FAILURE","MY_INFO","MY_INFO_SUCCESS","MY_INFO_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","WITHDRAW","WITHDRAW_SUCCESS","WITHDRAW_FAILURE","setRefreshToken","refreshToken","changeField","form","key","value","initializeForm","logout","memberIndex","indexLink","signup","signupLink","username","password","verify","verificationLink","token","login","loginLink","renew","renewLink","forget","forgetLink","myInfo","myInfoLink","changePassword","changePasswordLink","newPassword","withdraw","withdrawLink","memberIndexSaga","get","signupSaga","post","verifySaga","loginSaga","renewSaga","headers","forgetSaga","myInfoSaga","changePasswordSaga","withdrawSaga","delete","takeLatest","initialState","links","passwordConfirm","newPasswordConfirm","verified","found","email","passwordChanged","withdrew","errorResponse","member","produce","draft","data","_links","href","issueJwt","renewJwt","onForgetPassword","access_token","refresh_token","withRouter","history","dispatch","useDispatch","useSelector","useEffect","setInterval","alert","push","localStorage","removeItem","PageTemplate","children","Home","HomePage","CentralTemplate","toErrorMessage","status","errorDescription","toBadRequestMessage","textMap","MemberForm","onChange","onSubmit","errorMessage","text","name","placeholder","Error","selectInputs","selectLinks","Loading","useState","setLoading","setErrorMessage","e","target","preventDefault","includes","test","String","toLowerCase","length","SignupPage","VerifyPage","setItem","LoginPage","MemberInfo","onClickWithdraw","accountantSaga","INITIALIZE_INCOME_STATEMENT","ACCOUNTANT_INDEX","ACCOUNTANT_INDEX_SUCCESS","ACCOUNTANT_INDEX_FAILURE","CLEAR","CLEAR_SUCCESS","CLEAR_FAILURE","POST_ACCOUNT","POST_ACCOUNT_SUCCESS","POST_ACCOUNT_FAILURE","GET_ACCOUNTS","GET_ACCOUNTS_SUCCESS","GET_ACCOUNTS_FAILURE","GET_ACCOUNT","GET_ACCOUNT_SUCCESS","GET_ACCOUNT_FAILURE","CHANGE_NAME","CHANGE_NAME_SUCCESS","CHANGE_NAME_FAILURE","CHANGE_BUDGET","CHANGE_BUDGET_SUCCESS","CHANGE_BUDGET_FAILURE","DELETE_ACCOUNT","DELETE_ACCOUNT_SUCCESS","DELETE_ACCOUNT_FAILURE","GET_LEDGER","GET_LEDGER_SUCCESS","GET_LEDGER_FAILURE","GET_BALANCE_SHEET","GET_BALANCE_SHEET_SUCCESS","GET_BALANCE_SHEET_FAILURE","GET_INCOME_STATEMENT","GET_INCOME_STATEMENT_SUCCESS","GET_INCOME_STATEMENT_FAILURE","EXECUTE_TRANSACTION","EXECUTE_TRANSACTION_SUCCESS","EXECUTE_TRANSACTION_FAILURE","initializeIncomeStatement","accountantIndex","clear","clearLink","postAccount","postAccountLink","money","getAccounts","getAccountsLink","getAccount","getAccountLink","changeName","changeNameLink","newName","changeBudget","changeBudgetLink","newBudget","deleteAccount","deleteAccountLink","getLedger","getLedgerLink","getBalanceSheet","getBalanceSheetLink","getIncomeStatement","getIncomeStatementLink","begin","end","executeTransaction","executeTransactionLink","sourceId","destinationId","amount","description","accountantIndexSaga","clearSaga","postAccountSaga","getAccountsSaga","getAccountSaga","changeNameSaga","changeBudgetSaga","deleteAccountSaga","getLedgerSaga","getBalanceSheetSaga","getIncomeStatementSaga","executeTransactionSaga","accountForm","modifyForm","transactionForm","posted","accounts","account","changed","deleted","ledger","balanceSheet","incomeStatement","executed","accountant","window","confirm","MyPage","ForgetPage","moneyNameMap","ASSET","LIABILITY","REVENUE","EXPENSE","AccountForm","moneyName","id","htmlFor","split","join","isNaN","Number","toLocaleString","AccountFormPage","AccountItem","AccountList","assets","liabilities","revenues","expenses","forEach","accountItem","AccountListContainer","AccountListPage","accountNameMap","Asset","Liability","Revenue","Expense","transactionSignMap","INCREASE","DECREASE","OCCUR","TransactionItem","createdAt","substring","Account","onSubmitName","onSubmitBudget","onClickDelete","typeName","transactions","singleTransactions","map","transaction","index","reverse","moneyAmount","simpleAccount","filter","self","AccountPage","match","params","typeNameMap","TransactionForm","sources","destinations","setOptions","srcType","dstType","items","TransactionPage","transactionNameMap","SELL","PURCHASE_BY_CASH","PURCHASE_BY_CREDIT","BORROW","REPAY","TRANSFER","debit","credit","Ledger","doubleTransactions","LedgerContainer","LedgerPage","balance","BalanceSheet","asset","liability","total","net","assetSum","liabilitySum","BalanceSheetContainer","BalanceSheetPage","IncomeStatementForm","beginDate","inclusiveEndDate","IncomeStatementFormPage","occurred","monthlyBudget","IncomeStatement","revenue","expense","start","inclusiveEnd","days","profit","revenueSum","expenseSum","IncomeStatementContainer","IncomeStatementPage","NotFound","NotFoundPage","ServiceInformation","App","component","path","exact","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","memberServer","accountantServer","getItem","loadRefreshToken","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ae55d5a.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navigation.scss';\n\nfunction Navigation({jwt, onClickLogout}) {\n  function selectMenus() {\n    return jwt ?\n      <>\n        <div className={\"menu\"}>\n          <Link to={\"/transaction\"}>거래</Link>\n        </div>\n\n        <div className={\"menu\"}>\n          <span>계정</span>\n          <div className={\"dropdown account-dropdown\"}>\n            <Link to={\"/account-list\"}>목록</Link>\n            <Link to={\"/account-form\"}>등록</Link>\n          </div>\n        </div>\n\n        <div className={\"menu\"}>\n          <span>보고서</span>\n          <div className={\"dropdown report-dropdown\"}>\n            <Link to={\"/ledger\"}>복식장부</Link>\n            <Link to={\"/balance-sheet\"}>재무상태표</Link>\n            <Link to={\"/income-statement-form\"}>손익계산서</Link>\n          </div>\n        </div>\n\n        <div className={\"menu\"}>\n          <span>회원</span>\n          <div className={\"dropdown member-dropdown\"}>\n            <Link to={\"/my-page\"}>내 정보</Link>\n            <span onClick={onClickLogout}>로그아웃</span>\n          </div>\n        </div>\n      </>\n      : <Link to={\"/login\"}>로그인</Link>;\n  }\n\n  return (\n    <nav className={\"navigation\"}>\n      <div className={\"brand\"}>\n        <Link to={\"/\"}>SCENE</Link>\n      </div>\n      <div className={\"menus\"}>\n        {selectMenus()}\n      </div>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import {createAction, handleActions} from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\nexport const startLoading = createAction(START_LOADING, requestType => requestType);\nexport const finishLoading = createAction(FINISH_LOADING, requestType => requestType);\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false\n    })\n  },\n  initialState\n);\n\nexport default loading;\n","import {call, put} from 'redux-saga/effects';\nimport {finishLoading, startLoading} from \"../../modules/loading\";\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function* (action) {\n    yield put(startLoading(type));\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e.response,\n        error: true\n      });\n    }\n    yield put(finishLoading(type));\n  };\n};\n","import axios from 'axios';\n\nconst client = axios.create();\n\nexport default client;\n","import {createAction, handleActions} from 'redux-actions';\nimport produce from 'immer';\nimport {takeLatest} from 'redux-saga/effects';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/api/createRequestSaga';\nimport * as memberApi from '../lib/api/member';\n\nconst SET_REFRESH_TOKEN = \"member/SET_REFRESH_TOKEN\";\nconst CHANGE_FIELD = \"member/CHANGE_FIELD\";\nconst INITIALIZE_FORM = \"member/INITIALIZE_FORM\";\nconst LOGOUT = \"member/LOGOUT\";\nconst [MEMBER_INDEX, MEMBER_INDEX_SUCCESS, MEMBER_INDEX_FAILURE] = createRequestActionTypes(\"member/MEMBER_INDEX\");\nconst [SIGNUP, SIGNUP_SUCCESS, SIGNUP_FAILURE] = createRequestActionTypes(\"member/SIGNUP\");\nconst [VERIFY, VERIFY_SUCCESS, VERIFY_FAILURE] = createRequestActionTypes(\"member/VERIFY\");\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\"member/LOGIN\");\nconst [RENEW, RENEW_SUCCESS, RENEW_FAILURE] = createRequestActionTypes(\"member/RENEW\");\nconst [FORGET, FORGET_SUCCESS, FORGET_FAILURE] = createRequestActionTypes(\"member/FORGET\");\nconst [MY_INFO, MY_INFO_SUCCESS, MY_INFO_FAILURE] = createRequestActionTypes(\"member/MY_INFO\");\nconst [CHANGE_PASSWORD, CHANGE_PASSWORD_SUCCESS, CHANGE_PASSWORD_FAILURE] = createRequestActionTypes(\"member/CHANGE_PASSWORD\");\nconst [WITHDRAW, WITHDRAW_SUCCESS, WITHDRAW_FAILURE] = createRequestActionTypes(\"member/WITHDRAW\");\n\nexport const setRefreshToken = createAction(SET_REFRESH_TOKEN, (refreshToken) => (refreshToken));\nexport const changeField = createAction(CHANGE_FIELD, ({form, key, value}) => ({form, key, value}));\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => (form));\nexport const logout = createAction(LOGOUT);\nexport const memberIndex = createAction(MEMBER_INDEX, (indexLink) => ({indexLink}));\nexport const signup = createAction(SIGNUP, (signupLink, {username, password}) => ({signupLink, username, password}));\nexport const verify = createAction(VERIFY, (verificationLink, {token}) => ({verificationLink, token}));\nexport const login = createAction(LOGIN, (loginLink, {username, password}) => ({loginLink, username, password}));\nexport const renew = createAction(RENEW, (renewLink, refreshToken) => ({renewLink, refreshToken}));\nexport const forget = createAction(FORGET, (forgetLink, {username}) => ({forgetLink, username}));\nexport const myInfo = createAction(MY_INFO, (myInfoLink, jwt) => ({myInfoLink, jwt}));\nexport const changePassword = createAction(CHANGE_PASSWORD, (changePasswordLink, jwt, {newPassword}) => ({\n  changePasswordLink, jwt, newPassword\n}));\nexport const withdraw = createAction(WITHDRAW, (withdrawLink, jwt) => ({withdrawLink, jwt}));\n\nconst memberIndexSaga = createRequestSaga(MEMBER_INDEX, memberApi.index);\nconst signupSaga = createRequestSaga(SIGNUP, memberApi.signup);\nconst verifySaga = createRequestSaga(VERIFY, memberApi.verify);\nconst loginSaga = createRequestSaga(LOGIN, memberApi.login);\nconst renewSaga = createRequestSaga(RENEW, memberApi.renew);\nconst forgetSaga = createRequestSaga(FORGET, memberApi.forget);\nconst myInfoSaga = createRequestSaga(MY_INFO, memberApi.myInfo);\nconst changePasswordSaga = createRequestSaga(CHANGE_PASSWORD, memberApi.changePassword);\nconst withdrawSaga = createRequestSaga(WITHDRAW, memberApi.withdraw);\n\nexport function* memberSaga() {\n  yield takeLatest(MEMBER_INDEX, memberIndexSaga);\n  yield takeLatest(SIGNUP, signupSaga);\n  yield takeLatest(VERIFY, verifySaga);\n  yield takeLatest(LOGIN, loginSaga);\n  yield takeLatest(RENEW, renewSaga);\n  yield takeLatest(FORGET, forgetSaga);\n  yield takeLatest(MY_INFO, myInfoSaga);\n  yield takeLatest(CHANGE_PASSWORD, changePasswordSaga);\n  yield takeLatest(WITHDRAW, withdrawSaga);\n}\n\nconst initialState = {\n  links: {\n    signup: null,\n    login: null,\n    renew: null,\n    myInfo: null,\n    forget: null,\n    verify: null,\n    changePassword: null,\n    withdraw: null\n  },\n  signup: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  verify: {\n    token: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  forget: {\n    username: ''\n  },\n  changePassword: {\n    newPassword: '',\n    newPasswordConfirm: '',\n  },\n  jwt: null,\n  refreshToken: null,\n  verified: null,\n  found: null,\n  email: null,\n  passwordChanged: null,\n  withdrew: null,\n  errorResponse: null\n};\n\nconst member = handleActions(\n  {\n    [SET_REFRESH_TOKEN]: (state, {payload: refreshToken}) => ({\n      ...state, refreshToken\n    }),\n    [CHANGE_FIELD]: (state, {payload: {form, key, value}}) => (\n      produce(state, draft => {\n        draft[form][key] = value;\n      })\n    ),\n    [INITIALIZE_FORM]: (state, {payload: form}) => ({\n      ...state,\n      [form]: initialState[form],\n      verified: null,\n      found: null,\n      email: null,\n      passwordChanged: null,\n      withdrew: null,\n    }),\n    [LOGOUT]: (state) => ({\n      ...state,\n      jwt: null,\n      refreshToken: null\n    }),\n    [MEMBER_INDEX_SUCCESS]: (state, {payload: response}) => (\n      produce(state, draft => {\n        draft.links.signup = response.data._links.signup.href;\n        draft.links.login = response.data._links.issueJwt.href;\n        draft.links.renew = response.data._links.renewJwt.href;\n        draft.links.myInfo = response.data._links.myInfo.href;\n        draft.links.forget = response.data._links.onForgetPassword.href;\n        draft.errorResponse = null;\n      })\n    ),\n    [MEMBER_INDEX_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [SIGNUP_SUCCESS]: (state, {payload: response}) => (\n      produce(state, draft => {\n        draft.links.verify = response.data._links.verify.href;\n        draft.errorResponse = null;\n      })\n    ),\n    [SIGNUP_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [VERIFY_SUCCESS]: (state) => ({\n      ...state,\n      verified: true,\n      errorResponse: null\n    }),\n    [VERIFY_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [LOGIN_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      jwt: response.data.access_token,\n      refreshToken: response.data.refresh_token,\n      errorResponse: null\n    }),\n    [LOGIN_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [RENEW_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      jwt: response.data.access_token,\n      refreshToken: response.data.refresh_token,\n      errorResponse: null\n    }),\n    [RENEW_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [FORGET_SUCCESS]: (state) => ({\n      ...state,\n      found: true,\n      errorResponse: null\n    }),\n    [FORGET_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [MY_INFO_SUCCESS]: (state, {payload: response}) => (\n      produce(state, draft => {\n        draft.email = response.data.email;\n        draft.links.changePassword = response.data._links.changePassword.href;\n        draft.links.withdraw = response.data._links.withdraw.href;\n        draft.errorResponse = null;\n      })\n    ),\n    [MY_INFO_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [CHANGE_PASSWORD_SUCCESS]: (state) => ({\n      ...state,\n      jwt: null,\n      passwordChanged: true,\n      errorResponse: null\n    }),\n    [CHANGE_PASSWORD_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [WITHDRAW_SUCCESS]: (state) => ({\n      ...state,\n      jwt: null,\n      withdrew: true,\n      errorResponse: null\n    }),\n    [WITHDRAW_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    })\n  },\n  initialState\n);\n\nexport default member;\n","import client from './client';\n\nexport const index = ({indexLink}) =>\n  client.get(indexLink);\n\nexport const signup = ({signupLink, username, password}) =>\n  client.post(signupLink, {username, password});\n\nexport const verify = ({verificationLink, token}) =>\n  client.post(verificationLink, {token});\n\nexport const login = ({loginLink, username, password}) =>\n  client.post(loginLink, {username, password});\n\nexport const renew = ({renewLink, refreshToken}) =>\n  client.post(renewLink, refreshToken, {headers: {'Content-Type': 'text/plain'}});\n\nexport const forget = ({forgetLink, username}) =>\n  client.post(forgetLink, {username});\n\nexport const myInfo = ({myInfoLink, jwt}) =>\n  client.get(myInfoLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const changePassword = ({changePasswordLink, jwt, newPassword}) =>\n  client.put(changePasswordLink, {newPassword}, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const withdraw = ({withdrawLink, jwt}) =>\n  client.delete(withdrawLink, {headers: {'X-AUTH-TOKEN': jwt}});\n","import React, {useEffect} from 'react';\nimport Navigation from \"../../components/common/Navigation\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout, renew} from \"../../modules/member\";\nimport {withRouter} from \"react-router-dom\";\n\n\nfunction NavigationContainer({history}) {\n  const dispatch = useDispatch();\n\n  const {jwt, refreshToken, renewLink, errorResponse} = useSelector(({member}) => ({\n    jwt: member.jwt,\n    refreshToken: member.refreshToken,\n    renewLink: member.links.renew,\n    errorResponse: member.errorResponse\n  }));\n\n\n  useEffect(() => {\n    if (renewLink && refreshToken) {\n      dispatch(renew(renewLink, refreshToken));\n      setInterval(() => dispatch(renew(renewLink, refreshToken)), 29 * 60 * 1000);\n    }\n  }, [dispatch, refreshToken, renewLink]);\n\n\n  useEffect(() => {\n    if (errorResponse) {\n      if (errorResponse.data.error === 'RefreshTokenException') {\n        alert('로그인 자동연장 기간이 만료되었습니다. 수동 로그인이 필요합니다.');\n        dispatch(logout());\n      }\n    }\n  }, [dispatch, errorResponse]);\n\n  const onClickLogout = () => dispatch(logout());\n\n\n  useEffect(() => {\n    if (!jwt && !refreshToken) {\n      history.push('/');\n      localStorage.removeItem('refreshToken');\n    }\n  }, [jwt, refreshToken, history]);\n\n\n  return (\n    <Navigation\n      jwt={jwt}\n      onClickLogout={onClickLogout}\n    />\n  );\n}\n\n\nexport default withRouter(NavigationContainer);\n","import React from 'react';\nimport './PageTemplate.scss';\n\nfunction PageTemplate({children}) {\n  return (\n    <div className={\"page-template\"}>\n      {children}\n    </div>\n  );\n}\n\nexport default PageTemplate;\n","import React from 'react';\nimport './Home.scss';\n\nfunction Home() {\n  return (\n    <div className={\"home\"}>\n\n      <h1>SCENE</h1>\n      <p>\n        개인이 제공하고 있는 서비스입니다. <br/>\n        가계부 외에도 생활 관리 기능을 개발할 계획입니다. <br/>\n        안정적인 운영을 지향하지만 보장할 수는 없습니다. <br/>\n        suloginscene@gmail.com\n      </p>\n\n      <hr/>\n\n      <p>\n        기능을 살펴보실 수 있는 테스트 회원입니다. <br/>\n        <br/>\n        이메일: test@email.com <br/>\n        비밀번호: password\n      </p>\n\n      <hr/>\n\n      <h2>복식부기 가계부</h2>\n      <p>\n        자금의 흐름을 원인과 결과로 파악할 수 있습니다. 개인이 사용하기에 편리하도록 단순화하였습니다.\n        <br/><small> * 정식 회계용어에 정확히 대응하지 않을 수 있습니다.</small>\n        <br/><small> * 21억 이하를 다루며, 모바일에서는 일부 정보가 생략될 수 있습니다.</small>\n      </p>\n\n      <h3>계정</h3>\n      <div>\n        <p>\n          자산과 부채는 현 시점의 잔액을 갖는 <b>저량</b>이며, 수입과 지출은 기간 내의 발생량을 갖는 <b>유량</b>입니다.<br/>\n          각 계정 화면에서 거래 기록을 볼 수 있습니다. 저량 계정의 경우에만 기초 금액 등록이 첫 거래로 기록되어 있습니다.\n        </p>\n        <table>\n          <thead>\n            <tr>\n              <th>유형</th>\n              <th>예시</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>자산</th>\n              <td className={\"explanation\"}>현금, 저축 계좌, 빌려준 돈, 전세금 등 <small>* 주식 및 부동산도 포함되나 금액 변동에 주의</small></td>\n            </tr>\n            <tr>\n              <th>부채</th>\n              <td className={\"explanation\"}>신용카드, 대출 계좌, 빌린 돈 등</td>\n            </tr>\n            <tr>\n              <th>수입</th>\n              <td className={\"explanation\"}>근로소득, 사업소득, 금융소득 등</td>\n            </tr>\n            <tr>\n              <th>지출</th>\n              <td className={\"explanation\"}>식비, 교통/통신비, 생활비, 경조사 등</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <h3>거래</h3>\n      <div>\n        <p>\n          다양한 경제행동을 계정 간 이동 유형에 따라 최소화하였습니다.\n          <br/><small> * 해당 유형의 가장 대표적인 행동을 이름으로 하였으나, 이름과 행동이 어울리지 않는 경우가 존재합니다.</small><br/>\n          어떤 경제행동을 어떤 거래유형으로 처리해야 하는지는 다소간 개인의 판단에 속합니다.\n          <br/><small> * 예를 들어,\n          주식을 자산으로 본다면 매수-매도 시 '이동' 처리하고, 등락을 '판매(투자수익)' 또는 '현금구매(투자손해)'로 처리할 수 있습니다.\n          주식을 일반 사물처럼 취급한다면 매수를 '현금구매(주식구매)', '판매(주식판매)'로 처리할 수 있습니다.\n          전자는 복잡하지만 주식 계정의 역사를 추적할 수 있으며, 후자는 편리하지만 주식 보유 중의 자산이 과소평가됩니다. </small>\n        </p>\n        <table className={\"transaction-description-table\"}>\n          <thead>\n            <tr>\n              <th>유형</th>\n              <th>이동</th>\n              <th>예시</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>판매</th>\n              <td>수입 발생 -> 자산 증가</td>\n              <td className={\"explanation\"}>모든 소득 <small>* 신용 판매는 빌려준 돈에 해당하는 자산 계정 사용</small></td>\n            </tr>\n            <tr>\n              <th>현금</th>\n              <td>자산 감소 -> 지출 발생</td>\n              <td className={\"explanation\"}>현금, 체크카드 등의 단순 소비</td>\n            </tr>\n            <tr>\n              <th>신용</th>\n              <td>부채 증가 -> 지출 발생</td>\n              <td className={\"explanation\"}>신용카드, 외상 등의 단순 소비</td>\n            </tr>\n            <tr>\n              <th>대출</th>\n              <td>부채 증가 -> 자산 증가</td>\n              <td className={\"explanation\"}>자금 자체의 대출</td>\n            </tr>\n            <tr>\n              <th>상환</th>\n              <td>자산 감소 -> 부채 감소</td>\n              <td className={\"explanation\"}>신용카드 정산 및 대출금 상환</td>\n            </tr>\n            <tr>\n              <th>이동</th>\n              <td>자산 감소 -> 자산 증가</td>\n              <td className={\"explanation\"}>내 자산계정 간 이체 및 자산성 구매 <small>* 부동산 구매 등</small></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <h3>보고서</h3>\n      <div>\n        <p>\n          장부, 재무상태표, 손익계산서, 세 종류의 보고서를 제공합니다.\n        </p>\n        <p>\n          <b>장부</b>는 계정 간 일어난 모든 거래를 기록합니다. (저량 계정의 기초 금액 등록은 제외됩니다.)\n          자금 흐름의 기록이므로 금액은 언제나 양수이며, 잔액 개념은 존재하지 않습니다.\n          계정 이름을 변경하거나, 계정을 삭제한 경우에도 장부는 변하지 않습니다.\n        </p>\n        <p>\n          <b>재무상태표</b>는 자산과 부채의 잔액 현황을 보여줍니다.\n          자산과 부채는 저량이므로 조회 시점의 상태만을 보여줍니다.\n          계정 이름 변경은 반영되며, 저량 계정은 잔액이 남아있는 경우 삭제할 수 없으므로 신뢰할 수 있는 상태를 유지합니다.\n        </p>\n        <p>\n          <b>손익계산서</b>는 수입과 지출의 발생 현황을 보여줍니다.\n          수입과 지출은 유량이므로 조회할 기간을 정해서 요청하여야 합니다.\n          계정 이름 변경은 반영되며, 계정을 삭제하는 경우 손익계산서에서 조회되지 않으므로 주의가 필요합니다.\n        </p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport PageTemplate from \"../components/common/PageTemplate\";\nimport Home from \"../components/Home\";\n\nfunction HomePage() {\n  return (\n    <PageTemplate>\n      <Home/>\n    </PageTemplate>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport './CentralTemplate.scss';\n\nfunction CentralTemplate({children}) {\n  return (\n    <div className={\"central-template\"}>\n      <div className={\"white-box\"}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default CentralTemplate;\n","export default function toErrorMessage(errorResponse) {\n  const status = errorResponse.status;\n  switch (status) {\n    case 400:\n      return toBadRequestMessage(errorResponse);\n    case 401:\n      return '로그인 연장을 위해 페이지를 새로고침 해주세요.';\n    case 403:\n      return '권한이 없습니다.';\n    case 404:\n      return '요청하신 정보를 찾을 수 없습니다.';\n    case 424:\n      return '외부 서비스에 문제가 있습니다.';\n    case 500:\n      return '서버에서 문제가 발생했습니다.';\n    default:\n      return status + ' ' + errorResponse.data;\n  }\n}\n\nfunction toBadRequestMessage(errorResponse) {\n  const error = errorResponse.data.error;\n  const errorDescription = errorResponse.data.errorDescription;\n\n  switch (error) {\n    case 'RequestBindException':\n      return errorDescription;\n    case 'RefreshTokenException':\n      return '리프레시 토큰이 만료되었습니다.';\n    case 'DuplicateEmailException':\n      return '이미 존재하는 이메일입니다.';\n    case 'PasswordNotMatchedException':\n      return '잘못된 비밀번호입니다.';\n    case 'VerificationException':\n      return '잘못된 인증토큰입니다.';\n    case 'AccountCastingException':\n      return '부적절한 계정 유형입니다.';\n    case 'StockNotEmptyException':\n      return '저량 계정에 잔액이 있습니다.';\n    case 'NegativeMoneyException':\n      return '금액이 음수가 되는 요청입니다.';\n    default:\n      return error + ': ' + errorDescription;\n  }\n}\n","import React from 'react';\nimport './MemberForm.scss';\nimport {Link} from \"react-router-dom\";\n\nconst textMap = {\n  signup: '회원가입',\n  verify: '인증',\n  login: '로그인',\n  forget: '비밀번호 찾기'\n};\n\nfunction MemberForm({type, form, onChange, onSubmit, errorMessage}) {\n  const text = textMap[type];\n\n  function selectInputs() {\n    switch (text) {\n      case '회원가입':\n        return (\n          <>\n            <input\n              name={\"username\"}\n              type={\"text\"}\n              placeholder={\"이메일\"}\n              onChange={onChange}\n              value={form.username}\n            />\n            <input\n              name={\"password\"}\n              type={\"password\"}\n              placeholder={\"비밀번호\"}\n              onChange={onChange}\n              value={form.password}\n            />\n            <input\n              name={\"passwordConfirm\"}\n              type={\"password\"}\n              placeholder={\"비밀번호 확인\"}\n              onChange={onChange}\n              value={form.passwordConfirm}\n            />\n          </>\n        );\n      case '인증':\n        return (\n          <>\n            <input\n              name={\"token\"}\n              type={\"text\"}\n              placeholder={\"이메일 인증 토큰\"}\n              onChange={onChange}\n              value={form.token}\n            />\n          </>\n        );\n      case '로그인':\n        return (\n          <>\n            <input\n              name={\"username\"}\n              type={\"text\"}\n              placeholder={\"이메일\"}\n              onChange={onChange}\n              value={form.username}\n            />\n            <input\n              name={\"password\"}\n              type={\"password\"}\n              placeholder={\"비밀번호\"}\n              onChange={onChange}\n              value={form.password}\n            />\n          </>\n        );\n      case '비밀번호 찾기':\n        return (\n          <>\n            <input\n              name={\"username\"}\n              type={\"text\"}\n              placeholder={\"이메일\"}\n              onChange={onChange}\n              value={form.username}\n            />\n          </>\n        );\n      default:\n        throw new Error(\"타입이 적절하지 않습니다.\");\n    }\n  }\n\n  function selectLinks() {\n    switch (text) {\n      case '회원가입':\n        return (\n          <>\n            <Link to={\"/login\"}>로그인</Link>\n            <Link to={\"/forget\"}>비밀번호 찾기</Link>\n          </>\n        );\n      case '인증':\n        return (\n          <>\n          </>\n        );\n      case '로그인':\n        return (\n          <>\n            <Link to={\"/signup\"}>회원가입</Link>\n            <Link to={\"/forget\"}>비밀번호 찾기</Link>\n          </>\n        );\n      case '비밀번호 찾기':\n        return (\n          <>\n            <Link to={\"/signup\"}>회원가입</Link>\n            <Link to={\"/login\"}>로그인</Link>\n          </>\n        );\n      default:\n        throw new Error(\"타입이 적절하지 않습니다.\");\n    }\n  }\n\n  return (\n    <div className={\"member-form\"}>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        {selectInputs()}\n        {errorMessage ? <div className={\"error\"}>{errorMessage}</div> : <></>}\n        <button type={\"submit\"}>{text}</button>\n      </form>\n      <div className={\"links\"}>\n        {selectLinks()}\n      </div>\n    </div>\n  );\n}\n\nexport default MemberForm;\n","import React from 'react';\nimport './Loading.scss';\n\nfunction Loading() {\n  return (\n    <div className={\"loading\"}>\n      대기 중...\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, initializeForm, signup} from \"../../modules/member\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport MemberForm from \"../../components/member/MemberForm\";\nimport {withRouter} from 'react-router-dom';\nimport isValidEmail from \"../../lib/error/isValidEmail\";\nimport Loading from \"../../components/common/Loading\";\n\n\nfunction SignupForm({history}) {\n  const dispatch = useDispatch();\n\n  const {form, signupLink, verificationLink, errorResponse} = useSelector(({member}) => ({\n    form: member.signup,\n    signupLink: member.links.signup,\n    verificationLink: member.links.verify,\n    errorResponse: member.errorResponse\n  }));\n  const [loading, setLoading] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'signup', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {username, password, passwordConfirm} = form;\n    if ([username, password, passwordConfirm].includes('')) {\n      setErrorMessage(\"빈 칸을 모두 입력해 주세요.\");\n      return;\n    }\n    if (!isValidEmail(username)) {\n      setErrorMessage(\"이메일 형식이 올바르지 않습니다.\");\n      return;\n    }\n    if (password.length < 8) {\n      setErrorMessage(\"비밀번호는 8자 이상이어야 합니다.\");\n      return;\n    }\n    if (password !== passwordConfirm) {\n      setErrorMessage(\"비밀번호를 다시 확인해 주세요.\");\n      return;\n    }\n    dispatch(signup(signupLink, {username, password}));\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (verificationLink) {\n      history.push('/verify');\n    }\n  }, [verificationLink, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('signup'));\n    }\n  }, [dispatch]);\n\n\n  return loading ? <Loading/> : (\n    <MemberForm\n      type=\"signup\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\n\nexport default withRouter(SignupForm);\n","export default function isValidEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport SignupForm from \"../../containers/member/SignupForm\";\n\nfunction SignupPage() {\n  return (\n    <CentralTemplate>\n      <SignupForm/>\n    </CentralTemplate>\n  );\n}\n\nexport default SignupPage;\n","import React, {useEffect, useState} from 'react';\nimport MemberForm from \"../../components/member/MemberForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, initializeForm, verify} from \"../../modules/member\";\nimport {withRouter} from 'react-router-dom';\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\n\n\nfunction VerifyForm({history}) {\n  const dispatch = useDispatch();\n\n  const {form, verificationLink, verified, errorResponse} = useSelector(({member}) => ({\n    form: member.verify,\n    verificationLink: member.links.verify,\n    verified: member.verified,\n    errorResponse: member.errorResponse\n  }));\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'verify', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {token} = form;\n    if (token.length !== 6) {\n      setErrorMessage(\"토큰을 다시 확인해주세요.\");\n      return;\n    }\n    dispatch(verify(verificationLink, {token}));\n  };\n\n  useEffect(() => {\n    if (verified) {\n      history.push('/login');\n    }\n  }, [verified, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('verify'));\n    }\n  }, [dispatch]);\n\n\n  return (\n    <MemberForm\n      type=\"verify\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\n\nexport default withRouter(VerifyForm);\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport VerifyForm from \"../../containers/member/VerifyForm\";\n\nfunction VerifyPage() {\n  return (\n    <CentralTemplate>\n      <VerifyForm/>\n    </CentralTemplate>\n  );\n}\n\nexport default VerifyPage;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {changeField, initializeForm, login} from \"../../modules/member\";\nimport MemberForm from \"../../components/member/MemberForm\";\nimport {withRouter} from 'react-router-dom';\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\n\n\nfunction LoginForm({history}) {\n  const dispatch = useDispatch();\n\n  const {form, loginLink, jwt, refreshToken, errorResponse} = useSelector(({member}) => ({\n    form: member.login,\n    loginLink: member.links.login,\n    jwt: member.jwt,\n    refreshToken: member.refreshToken,\n    errorResponse: member.errorResponse\n  }));\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'login', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {username, password} = form;\n    dispatch(login(loginLink, {username, password}));\n  };\n\n  useEffect(() => {\n    if (jwt && refreshToken) {\n      history.push('/');\n      localStorage.setItem('refreshToken', refreshToken);\n    }\n  }, [jwt, refreshToken, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('login'));\n    }\n  }, [dispatch]);\n\n\n  return (\n    <MemberForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport LoginForm from \"../../containers/member/LoginForm\";\n\nfunction LoginPage() {\n  return (\n    <CentralTemplate>\n      <LoginForm/>\n    </CentralTemplate>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport './MemberInfo.scss';\n\nfunction MemberInfo({email, form, onChange, onSubmit, onClickWithdraw}) {\n  return (\n    <div className={\"member-info\"}>\n\n      <div className={\"info\"}>\n        <h3>이메일</h3>\n        <div className={\"email\"}>{email}</div>\n      </div>\n\n      <div className={\"change\"}>\n        <h3>비밀번호 변경</h3>\n        <form onSubmit={onSubmit}>\n          <input\n            name={\"newPassword\"}\n            type={\"password\"}\n            placeholder={\"새 비밀번호\"}\n            onChange={onChange}\n            value={form.newPassword}\n          />\n          <input\n            name={\"newPasswordConfirm\"}\n            type={\"password\"}\n            placeholder={\"새 비밀번호 확인\"}\n            onChange={onChange}\n            value={form.newPasswordConfirm}\n          />\n          <button type={\"submit\"}>변경하기</button>\n        </form>\n      </div>\n\n      <div className={\"withdraw\"}>\n        <h3>회원 탈퇴</h3>\n        <button onClick={onClickWithdraw}>탈퇴하기</button>\n      </div>\n\n    </div>\n  );\n}\n\nexport default MemberInfo;\n","import createRequestSaga, {createRequestActionTypes} from \"../lib/api/createRequestSaga\";\nimport {createAction, handleActions} from \"redux-actions\";\nimport * as accountantApi from \"../lib/api/accountant\";\nimport {takeLatest} from \"redux-saga/effects\";\nimport produce from \"immer\";\n\nconst CHANGE_FIELD = \"accountant/CHANGE_FIELD\";\nconst INITIALIZE_FORM = \"accountant/INITIALIZE_FORM\";\nconst INITIALIZE_INCOME_STATEMENT = \"accountant/INITIALIZE_INCOME_STATEMENT\";\nconst [ACCOUNTANT_INDEX, ACCOUNTANT_INDEX_SUCCESS, ACCOUNTANT_INDEX_FAILURE] = createRequestActionTypes(\"accountant/ACCOUNTANT_INDEX\");\nconst [CLEAR, CLEAR_SUCCESS, CLEAR_FAILURE] = createRequestActionTypes(\"accountant/CLEAR\");\nconst [POST_ACCOUNT, POST_ACCOUNT_SUCCESS, POST_ACCOUNT_FAILURE] = createRequestActionTypes(\"accountant/POST_ACCOUNT\");\nconst [GET_ACCOUNTS, GET_ACCOUNTS_SUCCESS, GET_ACCOUNTS_FAILURE] = createRequestActionTypes(\"accountant/GET_ACCOUNTS\");\nconst [GET_ACCOUNT, GET_ACCOUNT_SUCCESS, GET_ACCOUNT_FAILURE] = createRequestActionTypes(\"accountant/GET_ACCOUNT\");\nconst [CHANGE_NAME, CHANGE_NAME_SUCCESS, CHANGE_NAME_FAILURE] = createRequestActionTypes(\"accountant/CHANGE_NAME\");\nconst [CHANGE_BUDGET, CHANGE_BUDGET_SUCCESS, CHANGE_BUDGET_FAILURE] = createRequestActionTypes(\"accountant/CHANGE_BUDGET\");\nconst [DELETE_ACCOUNT, DELETE_ACCOUNT_SUCCESS, DELETE_ACCOUNT_FAILURE] = createRequestActionTypes(\"accountant/DELETE_ACCOUNT\");\nconst [GET_LEDGER, GET_LEDGER_SUCCESS, GET_LEDGER_FAILURE] = createRequestActionTypes(\"accountant/GET_LEDGER\");\nconst [GET_BALANCE_SHEET, GET_BALANCE_SHEET_SUCCESS, GET_BALANCE_SHEET_FAILURE] = createRequestActionTypes(\"accountant/GET_BALANCE_SHEET\");\nconst [GET_INCOME_STATEMENT, GET_INCOME_STATEMENT_SUCCESS, GET_INCOME_STATEMENT_FAILURE] = createRequestActionTypes(\"accountant/GET_INCOME_STATEMENT\");\nconst [EXECUTE_TRANSACTION, EXECUTE_TRANSACTION_SUCCESS, EXECUTE_TRANSACTION_FAILURE] = createRequestActionTypes(\"accountant/EXECUTE_TRANSACTION\");\n\nexport const changeField = createAction(CHANGE_FIELD, ({form, key, value}) => ({form, key, value}));\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => (form));\nexport const initializeIncomeStatement = createAction(INITIALIZE_INCOME_STATEMENT, () => ({}));\nexport const accountantIndex = createAction(ACCOUNTANT_INDEX, (indexLink) => ({indexLink}));\nexport const clear = createAction(CLEAR, (clearLink, jwt) => ({clearLink, jwt}));\nexport const postAccount = createAction(POST_ACCOUNT, (postAccountLink, jwt, {type, name, money}) => ({\n  postAccountLink, jwt, type, name, money\n}));\nexport const getAccounts = createAction(GET_ACCOUNTS, (getAccountsLink, jwt) => ({getAccountsLink, jwt}));\nexport const getAccount = createAction(GET_ACCOUNT, (getAccountLink, jwt) => ({getAccountLink, jwt}));\nexport const changeName = createAction(CHANGE_NAME, (changeNameLink, jwt, {newName}) => ({\n  changeNameLink, jwt, newName\n}));\nexport const changeBudget = createAction(CHANGE_BUDGET, (changeBudgetLink, jwt, {newBudget}) => ({\n  changeBudgetLink, jwt, newBudget\n}));\nexport const deleteAccount = createAction(DELETE_ACCOUNT, (deleteAccountLink, jwt) => ({deleteAccountLink, jwt}));\nexport const getLedger = createAction(GET_LEDGER, (getLedgerLink, jwt) => ({getLedgerLink, jwt}));\nexport const getBalanceSheet = createAction(GET_BALANCE_SHEET, (getBalanceSheetLink, jwt) => ({\n  getBalanceSheetLink, jwt\n}));\nexport const getIncomeStatement = createAction(GET_INCOME_STATEMENT, (getIncomeStatementLink, jwt, {begin, end}) => ({\n  getIncomeStatementLink, jwt, begin, end\n}));\nexport const executeTransaction = createAction(EXECUTE_TRANSACTION,\n  (executeTransactionLink, jwt, {type, sourceId, destinationId, amount, description}) => (\n    {executeTransactionLink, jwt, type, sourceId, destinationId, amount, description})\n);\n\nconst accountantIndexSaga = createRequestSaga(ACCOUNTANT_INDEX, accountantApi.index);\nconst clearSaga = createRequestSaga(CLEAR, accountantApi.clear);\nconst postAccountSaga = createRequestSaga(POST_ACCOUNT, accountantApi.postAccount);\nconst getAccountsSaga = createRequestSaga(GET_ACCOUNTS, accountantApi.getAccounts);\nconst getAccountSaga = createRequestSaga(GET_ACCOUNT, accountantApi.getAccount);\nconst changeNameSaga = createRequestSaga(CHANGE_NAME, accountantApi.changeName);\nconst changeBudgetSaga = createRequestSaga(CHANGE_BUDGET, accountantApi.changeBudget);\nconst deleteAccountSaga = createRequestSaga(DELETE_ACCOUNT, accountantApi.deleteAccount);\nconst getLedgerSaga = createRequestSaga(GET_LEDGER, accountantApi.getLedger);\nconst getBalanceSheetSaga = createRequestSaga(GET_BALANCE_SHEET, accountantApi.getBalanceSheet);\nconst getIncomeStatementSaga = createRequestSaga(GET_INCOME_STATEMENT, accountantApi.getIncomeStatement);\nconst executeTransactionSaga = createRequestSaga(EXECUTE_TRANSACTION, accountantApi.executeTransaction);\n\nexport function* accountantSaga() {\n  yield takeLatest(ACCOUNTANT_INDEX, accountantIndexSaga);\n  yield takeLatest(CLEAR, clearSaga);\n  yield takeLatest(POST_ACCOUNT, postAccountSaga);\n  yield takeLatest(GET_ACCOUNTS, getAccountsSaga);\n  yield takeLatest(GET_ACCOUNT, getAccountSaga);\n  yield takeLatest(CHANGE_NAME, changeNameSaga);\n  yield takeLatest(CHANGE_BUDGET, changeBudgetSaga);\n  yield takeLatest(DELETE_ACCOUNT, deleteAccountSaga);\n  yield takeLatest(GET_LEDGER, getLedgerSaga);\n  yield takeLatest(GET_BALANCE_SHEET, getBalanceSheetSaga);\n  yield takeLatest(GET_INCOME_STATEMENT, getIncomeStatementSaga);\n  yield takeLatest(EXECUTE_TRANSACTION, executeTransactionSaga);\n}\n\nconst initialState = {\n  links: {\n    postAccount: null,\n    getAccounts: null,\n    executeTransaction: null,\n    getLedger: null,\n    getBalanceSheet: null,\n    getIncomeStatement: null,\n    clear: null\n  },\n  accountForm: {\n    type: '',\n    name: '',\n    money: ''\n  },\n  modifyForm: {\n    newName: '',\n    newBudget: ''\n  },\n  transactionForm: {\n    type: '',\n    sourceId: '',\n    destinationId: '',\n    amount: '',\n    description: ''\n  },\n  posted: null,\n  accounts: null,\n  account: null,\n  changed: null,\n  deleted: null,\n  ledger: null,\n  balanceSheet: null,\n  incomeStatement: null,\n  executed: null,\n  errorResponse: null\n}\n\nconst accountant = handleActions({\n    [CHANGE_FIELD]: (state, {payload: {form, key, value}}) => (\n      produce(state, draft => {\n        draft[form][key] = value;\n      })\n    ),\n    [INITIALIZE_FORM]: (state, {payload: form}) => ({\n      ...state,\n      [form]: initialState[form],\n      posted: null,\n      changed: null,\n      deleted: null,\n      executed: null\n    }),\n    [INITIALIZE_INCOME_STATEMENT]: (state) => ({\n      ...state,\n      incomeStatement: null\n    }),\n    [ACCOUNTANT_INDEX_SUCCESS]: (state, {payload: response}) => (\n      produce(state, draft => {\n        draft.links.postAccount = response.data._links.postAccount.href;\n        draft.links.getAccounts = response.data._links.getAccounts.href;\n        draft.links.executeTransaction = response.data._links.executeTransaction.href;\n        draft.links.getLedger = response.data._links.getLedger.href;\n        draft.links.getBalanceSheet = response.data._links.getBalanceSheet.href;\n        draft.links.getIncomeStatement = response.data._links.getIncomeStatement.href;\n        draft.links.clear = response.data._links.clear.href;\n        draft.errorResponse = null;\n      })\n    ),\n    [ACCOUNTANT_INDEX_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [CLEAR_SUCCESS]: (state) => ({\n      ...state,\n      errorResponse: null\n    }),\n    [CLEAR_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [POST_ACCOUNT_SUCCESS]: (state) => ({\n      ...state,\n      posted: true,\n      errorResponse: null\n    }),\n    [POST_ACCOUNT_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_ACCOUNTS_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      accounts: response.data.accounts,\n      errorResponse: null\n    }),\n    [GET_ACCOUNTS_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_ACCOUNT_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      account: response.data,\n      errorResponse: null\n    }),\n    [GET_ACCOUNT_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [CHANGE_NAME_SUCCESS]: (state) => ({\n      ...state,\n      changed: true,\n      errorResponse: null\n    }),\n    [CHANGE_NAME_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [CHANGE_BUDGET_SUCCESS]: (state) => ({\n      ...state,\n      changed: true,\n      errorResponse: null\n    }),\n    [CHANGE_BUDGET_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [DELETE_ACCOUNT_SUCCESS]: (state) => ({\n      ...state,\n      deleted: true,\n      errorResponse: null\n    }),\n    [DELETE_ACCOUNT_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_LEDGER_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      ledger: response.data,\n      errorResponse: null\n    }),\n    [GET_LEDGER_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_BALANCE_SHEET_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      balanceSheet: response.data,\n      errorResponse: null\n    }),\n    [GET_BALANCE_SHEET_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_INCOME_STATEMENT_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      incomeStatement: response.data,\n      errorResponse: null\n    }),\n    [GET_INCOME_STATEMENT_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [EXECUTE_TRANSACTION_SUCCESS]: (state) => ({\n      ...state,\n      executed: true,\n      errorResponse: null\n    }),\n    [EXECUTE_TRANSACTION_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    })\n  }, initialState\n);\n\nexport default accountant;\n","import client from './client';\n\nexport const index = ({indexLink}) =>\n  client.get(indexLink);\n\nexport const clear = ({clearLink, jwt})=>\n  client.delete(clearLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const postAccount = ({postAccountLink, jwt, type, name, money}) =>\n  client.post(postAccountLink, {type, name, money}, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getAccounts = ({getAccountsLink, jwt}) =>\n  client.get(getAccountsLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getAccount = ({getAccountLink, jwt}) =>\n  client.get(getAccountLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const changeName = ({changeNameLink, jwt, newName}) =>\n  client.put(changeNameLink, {newName}, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const changeBudget = ({changeBudgetLink, jwt, newBudget}) =>\n  client.put(changeBudgetLink, {newBudget}, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const deleteAccount = ({deleteAccountLink, jwt}) =>\n  client.delete(deleteAccountLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getLedger = ({getLedgerLink, jwt}) =>\n  client.get(getLedgerLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getBalanceSheet = ({getBalanceSheetLink, jwt}) =>\n  client.get(getBalanceSheetLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getIncomeStatement = ({getIncomeStatementLink, jwt, begin, end}) =>\n  client.get(getIncomeStatementLink + `?beginDate=${begin}&inclusiveEndDate=${end}`, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const executeTransaction = ({executeTransactionLink, jwt, type, sourceId, destinationId, amount, description}) =>\n  client.post(\n    executeTransactionLink, {type, sourceId, destinationId, amount, description}, {headers: {'X-AUTH-TOKEN': jwt}});\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport MemberInfo from \"../../components/member/MemberInfo\";\nimport {changeField, changePassword, initializeForm, myInfo, withdraw} from \"../../modules/member\";\nimport {clear} from \"../../modules/accountant\";\nimport {withRouter} from \"react-router-dom\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\n\n\nfunction MemberInfoContainer({history}) {\n  const dispatch = useDispatch();\n\n  const {jwt, myInfoLink, email, changePasswordLink, form, passwordChanged, withdrawLink, withdrew, errorResponse}\n    = useSelector(({member}) => ({\n    jwt: member.jwt,\n    myInfoLink: member.links.myInfo,\n    email: member.email,\n    changePasswordLink: member.links.changePassword,\n    form: member.changePassword,\n    passwordChanged: member.passwordChanged,\n    withdrawLink: member.links.withdraw,\n    withdrew: member.withdrew,\n    errorResponse: member.errorResponse\n  }));\n  const {clearLink} = useSelector(({accountant}) => ({\n    clearLink: accountant.links.clear\n  }));\n\n\n  useEffect(() => {\n    dispatch(myInfo(myInfoLink, jwt));\n  }, [dispatch, myInfoLink, jwt]);\n\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'changePassword', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {newPassword, newPasswordConfirm} = form;\n    if (newPassword.length < 8) {\n      alert(\"비밀번호는 8자 이상이어야 합니다.\");\n      return;\n    }\n    if (newPassword !== newPasswordConfirm) {\n      alert(\"비밀번호를 다시 확인해 주세요.\");\n      return;\n    }\n    dispatch(changePassword(changePasswordLink, jwt, {newPassword}));\n  };\n\n  useEffect(() => {\n    if (passwordChanged) {\n      history.push('/login');\n    }\n  }, [passwordChanged, history]);\n\n\n  const onClickWithdraw = () => {\n    if (window.confirm(\"정말로 탈퇴하시겠습니까?\")) {\n      dispatch(withdraw(withdrawLink, jwt));\n      dispatch(clear(clearLink, jwt));\n    }\n  };\n\n  useEffect(() => {\n    if (withdrew) {\n      history.push('/');\n    }\n  }, [withdrew, history]);\n\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('changePassword'));\n    }\n  }, [dispatch]);\n\n\n  return (\n    <MemberInfo\n      email={email}\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      onClickWithdraw={onClickWithdraw}\n    />\n  );\n}\n\n\nexport default withRouter(MemberInfoContainer);\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport MemberInfoContainer from \"../../containers/member/MemberInfoContainer\";\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction MyPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <CentralTemplate>\n      <MemberInfoContainer/>\n    </CentralTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default MyPage;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, forget, initializeForm} from \"../../modules/member\";\nimport MemberForm from \"../../components/member/MemberForm\";\nimport {withRouter} from \"react-router-dom\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\n\n\nfunction ForgetForm({history}) {\n  const dispatch = useDispatch();\n\n  const {form, forgetLink, found, errorResponse} = useSelector(({member}) => ({\n    form: member.forget,\n    forgetLink: member.links.forget,\n    found: member.found,\n    errorResponse: member.errorResponse\n  }));\n  const [loading, setLoading] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'forget', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {username} = form;\n    dispatch(forget(forgetLink, {username}));\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (found) {\n      history.push('/login');\n    }\n  }, [found, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('forget'));\n    }\n  }, [dispatch]);\n\n\n  return loading ? <Loading/> : (\n    <MemberForm\n      type=\"forget\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\n\nexport default withRouter(ForgetForm);\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport ForgetForm from \"../../containers/member/ForgetForm\";\n\nfunction ForgetPage() {\n  return (\n    <CentralTemplate>\n      <ForgetForm/>\n    </CentralTemplate>\n  );\n}\n\nexport default ForgetPage;\n","import React from 'react';\nimport './AccountForm.scss'\n\nconst moneyNameMap = {\n  ASSET: '잔액',\n  LIABILITY: '잔액',\n  REVENUE: '예산',\n  EXPENSE: '예산',\n  '': '금액'\n};\n\nfunction AccountForm({form, onChange, onSubmit, errorMessage}) {\n  const moneyName = moneyNameMap[form.type];\n  return (\n    <div className={\"account-form\"}>\n      <h3>계정 등록</h3>\n      <form onSubmit={onSubmit}>\n        <div className={\"radio-area\"}>\n          <input name={\"type\"} type={\"radio\"} value={\"ASSET\"} id={\"asset\"} onChange={onChange}/>\n          <label htmlFor={\"asset\"}>자산</label>\n          <input name={\"type\"} type={\"radio\"} value={\"LIABILITY\"} id={\"liability\"} onChange={onChange}/>\n          <label htmlFor={\"liability\"}>부채</label>\n          <input name={\"type\"} type={\"radio\"} value={\"REVENUE\"} id={\"revenue\"} onChange={onChange}/>\n          <label htmlFor={\"revenue\"}>수입</label>\n          <input name={\"type\"} type={\"radio\"} value={\"EXPENSE\"} id={\"expense\"} onChange={onChange}/>\n          <label htmlFor={\"expense\"}>지출</label>\n        </div>\n        <div className={\"input-area\"}>\n          <input\n            name={\"name\"}\n            type={\"text\"}\n            placeholder={\"계정 이름\"}\n            onChange={onChange}\n            value={form.name}\n          />\n          <input\n            name={\"money\"}\n            type={\"text\"}\n            placeholder={moneyName}\n            onChange={onChange}\n            value={form.money}\n          />\n        </div>\n        {errorMessage ? <div className={\"error\"}>{errorMessage}</div> : <></>}\n        <button>계정 등록</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AccountForm;\n","import React, {useEffect, useState} from 'react';\nimport AccountForm from \"../../components/accountant/AccountForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, initializeForm, postAccount} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport {withRouter} from \"react-router-dom\";\n\n\nfunction AccountFormContainer({history}) {\n  const dispatch = useDispatch();\n\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {form, postAccountLink, posted, errorResponse} = useSelector(({accountant}) => ({\n    form: accountant.accountForm,\n    postAccountLink: accountant.links.postAccount,\n    posted: accountant.posted,\n    errorResponse: accountant.errorResponse\n  }));\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  const onChange = (e) => {\n    let {name, value} = e.target;\n    if (name === 'money') {\n      value = value.split(',').join('');\n      if (isNaN(value)) return;\n      value = Number(value).toLocaleString('ko-KR');\n    } else if (name === 'name') {\n      if (value.length > 8) return;\n    }\n    dispatch(changeField({form: 'accountForm', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let {type, name, money} = form;\n    money = money.split(',').join('');\n    if ([type, name, money].includes('')) {\n      setErrorMessage(\"빈 칸을 모두 입력해 주세요.\");\n      return;\n    }\n    dispatch(postAccount(postAccountLink, jwt, {type, name, money}));\n  };\n\n  useEffect(() => {\n    if (posted) {\n      history.push('/account-list');\n    }\n  }, [posted, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('accountForm'));\n    }\n  }, [dispatch]);\n\n\n  return (\n    <AccountForm\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\n\nexport default withRouter(AccountFormContainer);\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport {Redirect} from \"react-router-dom\";\nimport AccountFormContainer from \"../../containers/accountant/AccountFormContainer\";\n\nfunction AccountFormPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <CentralTemplate>\n      <AccountFormContainer/>\n    </CentralTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default AccountFormPage;\n","import React from 'react';\nimport './AccountList.scss';\nimport {Link} from \"react-router-dom\";\n\nfunction AccountItem({id, name}) {\n  return (\n    <div className={\"account-item\"}>\n      <Link to={`/account/${id}`}>{name}</Link>\n    </div>\n  );\n}\n\nfunction AccountList({accounts}) {\n  const [assets, liabilities, revenues, expenses] = [[], [], [], []];\n  accounts.forEach(account => {\n    const accountItem = <AccountItem key={account.id} id={account.id} name={account.name}/>;\n    switch (account.type) {\n      case \"Asset\":\n        assets.push(accountItem);\n        break;\n      case \"Liability\":\n        liabilities.push(accountItem);\n        break;\n      case \"Revenue\":\n        revenues.push(accountItem);\n        break;\n      case \"Expense\":\n        expenses.push(accountItem);\n        break;\n      default:\n        throw new Error(\"타입이 적절하지 않습니다.\");\n    }\n  });\n\n  return (\n    <div className={\"account-list\"}>\n      <h3>계정 목록</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>자산</th>\n            <td>{assets}</td>\n          </tr>\n          <tr>\n            <th>부채</th>\n            <td>{liabilities}</td>\n          </tr>\n          <tr>\n            <th>수입</th>\n            <td>{revenues}</td>\n          </tr>\n          <tr>\n            <th>지출</th>\n            <td>{expenses}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default AccountList;\n","import React, {useEffect} from 'react';\nimport AccountList from \"../../components/accountant/AccountList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccounts} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\n\n\nfunction AccountListContainer() {\n  const dispatch = useDispatch();\n\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getAccountsLink, accounts, errorResponse} = useSelector(({accountant}) => ({\n    getAccountsLink: accountant.links.getAccounts,\n    accounts: accountant.accounts,\n    errorResponse: accountant.errorResponse\n  }));\n\n\n  useEffect(() => {\n    dispatch(getAccounts(getAccountsLink, jwt));\n  }, [dispatch, getAccountsLink, jwt]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  return accounts ? (\n    <AccountList\n      accounts={accounts}\n    />\n  ) : <Loading/>;\n}\n\n\nexport default AccountListContainer;\n","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\nimport AccountListContainer from \"../../containers/accountant/AccountListContainer\";\n\nfunction AccountListPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <PageTemplate>\n      <AccountListContainer/>\n    </PageTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default AccountListPage;\n","import React from 'react';\nimport './Account.scss';\n\nconst accountNameMap = {\n  Asset: '자산',\n  Liability: '부채',\n  Revenue: '수입',\n  Expense: '지출'\n};\n\nconst moneyNameMap = {\n  Asset: '잔액',\n  Liability: '잔액',\n  Revenue: '예산',\n  Expense: '예산'\n};\n\nconst transactionSignMap = {\n  INCREASE: '+',\n  DECREASE: '-',\n  OCCUR: ''\n};\n\nfunction TransactionItem({type, amount, description, createdAt}) {\n  return (\n    <tr>\n      <td className={\"date\"}>{createdAt.substring(5, 10)}</td>\n      <td className={\"amount\"}>{transactionSignMap[type]} {amount.toLocaleString()} 원</td>\n      <td className={\"description\"}>{description}</td>\n    </tr>\n  );\n}\n\nfunction Account({account, form, onChange, onSubmitName, onSubmitBudget, onClickDelete}) {\n  const typeName = accountNameMap[account.type];\n  const moneyName = moneyNameMap[account.type];\n  const transactions = account.singleTransactions.map((transaction, index) => (\n      <TransactionItem\n        key={index}\n        type={transaction.type}\n        amount={transaction.amount}\n        description={transaction.description}\n        createdAt={transaction.createdAt}\n      />\n    )\n  ).reverse();\n\n  return (\n    <div className={\"account\"}>\n\n      <div className={\"info\"}>\n        <div><h3>{account.name}</h3><span>{typeName}</span></div>\n        <div className={\"money\"}>{moneyName}: {account.moneyAmount.toLocaleString()} 원</div>\n      </div>\n\n      <div className={\"configure\"}>\n        <div className={\"row\"}>\n          <h4>이름 변경</h4>\n          <form onSubmit={onSubmitName}>\n            <input\n              name={\"newName\"}\n              type={\"text\"}\n              placeholder={\"새 이름\"}\n              onChange={onChange}\n              value={form.newName}\n            />\n            <button type={\"submit\"}>변경</button>\n          </form>\n        </div>\n        {(moneyName === '예산') ?\n          <div className={\"row\"}>\n            <h4>예산 변경</h4>\n            <form onSubmit={onSubmitBudget}>\n              <input\n                name={\"newBudget\"}\n                type={\"text\"}\n                placeholder={\"새 예산\"}\n                onChange={onChange}\n                value={form.newBudget}\n              />\n              <button type={\"submit\"}>변경</button>\n            </form>\n          </div>\n          : <></>}\n        <div className={\"row\"}>\n          <h4>계정 삭제</h4>\n          <button onClick={onClickDelete}>삭제</button>\n        </div>\n      </div>\n\n      <div className={\"transactions\"}>\n        <h3>거래 기록</h3><span>총 {transactions.length} 건</span>\n        <table>\n          <tbody>{transactions}</tbody>\n        </table>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Account;\n","import React, {useEffect} from 'react';\nimport Account from \"../../components/accountant/Account\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n  changeBudget,\n  changeField,\n  changeName,\n  deleteAccount,\n  getAccount,\n  initializeForm\n} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\nimport {withRouter} from \"react-router-dom\";\n\n\nfunction AccountContainer({id, history}) {\n  const dispatch = useDispatch();\n\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {accounts, account, form, changed, deleted, errorResponse} = useSelector(({accountant}) => ({\n    accounts: accountant.accounts,\n    account: accountant.account,\n    form: accountant.modifyForm,\n    changed: accountant.changed,\n    deleted: accountant.deleted,\n    errorResponse: accountant.errorResponse\n  }));\n\n\n  useEffect(() => {\n    const simpleAccount = accounts.filter(account => account.id === Number(id))[0];\n    dispatch(getAccount(simpleAccount._links.self.href, jwt));\n  }, [dispatch, accounts, id, jwt]);\n\n\n  const onChange = (e) => {\n    let {name, value} = e.target;\n    if (name === 'newBudget') {\n      value = Number(value.split(',').join('')).toLocaleString('ko-KR');\n    }\n    dispatch(changeField({form: 'modifyForm', key: name, value: value}));\n  };\n\n\n  const onSubmitName = (e) => {\n    e.preventDefault();\n    const {newName} = form;\n    if (newName === '') {\n      alert(\"새 이름을 입력해 주세요.\");\n      return;\n    }\n    if (newName.length > 8) {\n      alert(\"계정 이름은 8자 이하여야 합니다.\");\n      return;\n    }\n    if (window.confirm(\"장부에 기록된 이름은 변하지 않습니다. 계속 진행하시겠습니까?\")) {\n      dispatch(changeName(account._links.changeName.href, jwt, {newName}));\n    }\n  };\n\n  const onSubmitBudget = (e) => {\n    e.preventDefault();\n    let {newBudget} = form;\n    newBudget = newBudget.split(',').join('');\n    if (newBudget === '') {\n      alert(\"새 예산을 입력해 주세요.\");\n      return;\n    }\n    if (isNaN(newBudget)) {\n      alert(\"금액은 숫자여야 합니다.\");\n      return;\n    }\n    dispatch(changeBudget(account._links.changeBudget.href, jwt, {newBudget}));\n  };\n\n  useEffect(() => {\n    if (changed) {\n      history.push('/account-list');\n    }\n  }, [changed, history]);\n\n\n  const onClickDelete = () => {\n    if (window.confirm(\"삭제 시 재무상태표 및 손익계산서에서 조회되지 않습니다. 정말로 삭제하시겠습니까?\")) {\n      dispatch(deleteAccount(account._links.deleteAccount.href, jwt));\n    }\n  };\n\n  useEffect(() => {\n    if (deleted) {\n      history.push('/account-list');\n    }\n  }, [deleted, history]);\n\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('modifyForm'));\n    }\n  }, [dispatch]);\n\n\n  return account ? (\n    <Account\n      account={account}\n      form={form}\n      onChange={onChange}\n      onSubmitName={onSubmitName}\n      onSubmitBudget={onSubmitBudget}\n      onClickDelete={onClickDelete}\n    />\n  ) : <Loading/>;\n}\n\n\nexport default withRouter(AccountContainer);\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport AccountContainer from \"../../containers/accountant/AccountContainer\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\n\nfunction AccountPage({match}) {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {accounts} = useSelector(({accountant}) => ({accounts: accountant.accounts}));\n\n  if (!jwt) return <Redirect to={\"/login\"}/>;\n  if (!accounts) return <Redirect to={\"/account-list\"}/>\n  return (\n    <PageTemplate>\n      <AccountContainer id={match.params.id}/>\n    </PageTemplate>\n  );\n}\n\nexport default AccountPage;\n","import React from 'react';\nimport './TransactionForm.scss';\n\nconst typeNameMap = {\n  'Asset': '자산',\n  'Liability': '부채',\n  'Revenue': '수입',\n  'Expense': '지출'\n};\n\nfunction TransactionForm({accounts, form, onChange, onSubmit, errorMessage}) {\n  const [sources, destinations] = [[], []];\n  const setOptions = (srcType, dstType) => {\n    sources.push(<option key={0} value={\"\"} className={\"default\"}>({typeNameMap[srcType]})</option>);\n    destinations.push(<option key={0} value={\"\"} className={\"default\"}>({typeNameMap[dstType]})</option>);\n    accounts.forEach(account => {\n      const items = <option key={account.id} value={account.id}>{account.name}</option>;\n      if (account.type === srcType) sources.push(items);\n      if (account.type === dstType) destinations.push(items);\n    });\n  };\n\n  switch (form.type) {\n    case \"SELL\":\n      setOptions('Revenue', 'Asset');\n      break;\n    case \"PURCHASE_BY_CASH\":\n      setOptions('Asset', 'Expense');\n      break;\n    case \"PURCHASE_BY_CREDIT\":\n      setOptions('Liability', 'Expense');\n      break;\n    case \"BORROW\":\n      setOptions('Liability', 'Asset');\n      break;\n    case \"REPAY\":\n      setOptions('Asset', 'Liability');\n      break;\n    case \"TRANSFER\":\n      setOptions('Asset', 'Asset');\n      break;\n    default:\n      sources.push(<option key={0} value={\"\"} className={\"default\"}>출발</option>);\n      destinations.push(<option key={0} value={\"\"} className={\"default\"}>도착</option>);\n  }\n\n  return (\n    <div className={\"transaction-form\"}>\n      <form onSubmit={onSubmit}>\n        <div className={\"radio-area\"}>\n          <input name={\"type\"} type={\"radio\"} value={\"SELL\"} id={\"sell\"} onChange={onChange}/>\n          <label htmlFor={\"sell\"}>판매</label>\n          <input name={\"type\"} type={\"radio\"} value={\"PURCHASE_BY_CASH\"} id={\"cash\"} onChange={onChange}/>\n          <label htmlFor={\"cash\"}>현금구매</label>\n          <input name={\"type\"} type={\"radio\"} value={\"PURCHASE_BY_CREDIT\"} id={\"credit\"} onChange={onChange}/>\n          <label htmlFor={\"credit\"}>신용구매</label>\n          <input name={\"type\"} type={\"radio\"} value={\"BORROW\"} id={\"borrow\"} onChange={onChange}/>\n          <label htmlFor={\"borrow\"}>대출</label>\n          <input name={\"type\"} type={\"radio\"} value={\"REPAY\"} id={\"repay\"} onChange={onChange}/>\n          <label htmlFor={\"repay\"}>상환</label>\n          <input name={\"type\"} type={\"radio\"} value={\"TRANSFER\"} id={\"transfer\"} onChange={onChange}/>\n          <label htmlFor={\"transfer\"}>이동</label>\n        </div>\n        <div className={\"select-area\"}>\n          <select name={\"sourceId\"} onChange={onChange}>\n            {sources}\n          </select>\n          <select name={\"destinationId\"} onChange={onChange}>\n            {destinations}\n          </select>\n        </div>\n        <div className={\"input-area\"}>\n          <input\n            name={\"amount\"}\n            type={\"text\"}\n            placeholder={\"금액\"}\n            onChange={onChange}\n            value={form.amount}\n          />\n          <input\n            name={\"description\"}\n            type={\"text\"}\n            placeholder={\"설명\"}\n            onChange={onChange}\n            value={form.description}\n          />\n        </div>\n        {errorMessage ? <div className={\"error\"}>{errorMessage}</div> : <></>}\n        <button>거래 등록</button>\n      </form>\n    </div>\n  );\n}\n\nexport default TransactionForm;\n","import React, {useEffect, useState} from 'react';\nimport TransactionForm from \"../../components/accountant/TransactionForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, executeTransaction, getAccounts, initializeForm} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\nimport {withRouter} from \"react-router-dom\";\n\n\nfunction TransactionFormContainer({history}) {\n  const dispatch = useDispatch();\n\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getAccountsLink, accounts, form, executeTransactionLink, executed, errorResponse}\n    = useSelector(({accountant}) => ({\n    getAccountsLink: accountant.links.getAccounts,\n    accounts: accountant.accounts,\n    form: accountant.transactionForm,\n    executeTransactionLink: accountant.links.executeTransaction,\n    executed: accountant.executed,\n    errorResponse: accountant.errorResponse\n  }));\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  useEffect(() => {\n    dispatch(getAccounts(getAccountsLink, jwt));\n  }, [dispatch, getAccountsLink, jwt]);\n\n\n  const onChange = (e) => {\n    let {name, value} = e.target;\n    if (name === 'amount') {\n      value = value.split(',').join('');\n      if (isNaN(value)) return;\n      value = Number(value).toLocaleString('ko-KR');\n    }\n    dispatch(changeField({form: 'transactionForm', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let {type, sourceId, destinationId, amount, description} = form;\n    amount = amount.split(',').join('');\n    if ([type, sourceId, destinationId, amount, description].includes('')) {\n      setErrorMessage(\"빈 칸을 모두 입력해 주세요.\");\n      return;\n    }\n    dispatch(executeTransaction(executeTransactionLink, jwt, {type, sourceId, destinationId, amount, description}));\n  };\n\n  useEffect(() => {\n    if (executed) {\n      history.push('/ledger');\n    }\n  }, [executed, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse))\n    }\n  }, [errorResponse]);\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('transactionForm'));\n    }\n  }, [dispatch]);\n\n\n  return accounts ? (\n    <TransactionForm\n      accounts={accounts}\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  ) : <Loading/>;\n}\n\n\nexport default withRouter(TransactionFormContainer);\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport TransactionFormContainer from \"../../containers/accountant/TransactionFormContainer\";\n\nfunction TransactionPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <CentralTemplate>\n      <TransactionFormContainer/>\n    </CentralTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default TransactionPage;\n","import React from 'react';\nimport './Ledger.scss';\n\nconst transactionNameMap = {\n  SELL: '판매',\n  PURCHASE_BY_CASH: '현금',\n  PURCHASE_BY_CREDIT: '신용',\n  BORROW: '대출',\n  REPAY: '상환',\n  TRANSFER: '이동'\n};\n\nfunction TransactionItem({type, amount, debit, credit, description, createdAt}) {\n  return (\n    <tr>\n      <td className={\"date\"}>{createdAt.substring(5, 10)}</td>\n      <td className={\"transaction-name\"}>{transactionNameMap[type]}</td>\n      <td className={\"account-name\"}>{credit}</td>\n      <td className={\"account-name\"}>{debit}</td>\n      <td className={\"amount\"}>{amount.toLocaleString()} 원</td>\n      <td className={\"description\"}>{description}</td>\n    </tr>\n  );\n}\n\nfunction Ledger({ledger}) {\n  const transactions = ledger.doubleTransactions.map((transaction, index) => (\n      <TransactionItem\n        key={index}\n        type={transaction.type}\n        amount={transaction.amount}\n        debit={transaction.debit}\n        credit={transaction.credit}\n        description={transaction.description}\n        createdAt={transaction.createdAt}\n      />\n    )\n  ).reverse();\n\n  return (\n    <div className={\"ledger\"}>\n      <h3>장부</h3> <span>총 {transactions.length} 건</span>\n      <div className={\"transactions\"}>\n        <table>\n          <thead>\n            <tr>\n              <th>날짜</th>\n              <th>종류</th>\n              <th>출발</th>\n              <th>도착</th>\n              <th>금액</th>\n              <th className={\"description\"}>설명</th>\n            </tr>\n          </thead>\n          <tbody>\n            {transactions}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Ledger;\n","import React, {useEffect} from 'react';\nimport Ledger from \"../../components/accountant/Ledger\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getLedger} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\n\n\nfunction LedgerContainer() {\n  const dispatch = useDispatch();\n\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getLedgerLink, ledger, errorResponse} = useSelector(({accountant}) => ({\n    getLedgerLink: accountant.links.getLedger,\n    ledger: accountant.ledger,\n    errorResponse: accountant.errorResponse\n  }));\n\n\n  useEffect(() => {\n    dispatch(getLedger(getLedgerLink, jwt));\n  }, [dispatch, getLedgerLink, jwt]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  return ledger ? (\n    <Ledger\n      ledger={ledger}\n    />\n  ) : <Loading/>;\n}\n\n\nexport default LedgerContainer;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport LedgerContainer from \"../../containers/accountant/LedgerContainer\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\n\nfunction LedgerPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <PageTemplate>\n      <LedgerContainer/>\n    </PageTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default LedgerPage;\n","import React from 'react';\nimport './BalanceSheet.scss';\n\nfunction AccountItem({account}) {\n  return (\n    <tr>\n      <td>{account.name}</td>\n      <td className={\"balance\"}>{account.balance.toLocaleString()} 원</td>\n    </tr>\n  );\n}\n\nfunction BalanceSheet({balanceSheet}) {\n  const assets = balanceSheet.assets.map(asset =>\n    <AccountItem key={asset.id} account={asset}/>);\n  const liabilities = balanceSheet.liabilities.map(liability =>\n    <AccountItem key={liability.id} account={liability}/>);\n\n  return (\n    <div className={\"balance-sheet\"}>\n      <h3>재무상태표</h3>\n      <div className={\"net\"}>\n        순 자산 &nbsp; {balanceSheet.total.net.toLocaleString()} 원\n      </div>\n      <div className={\"detail\"}>\n        <table>\n          <thead>\n            <tr>\n              <th>자산</th>\n              <th>{balanceSheet.total.assetSum.toLocaleString()} 원</th>\n            </tr>\n          </thead>\n          <tbody>\n            {assets}\n          </tbody>\n        </table>\n        <div className={\"vertical-line\"}/>\n        <table>\n          <thead>\n            <tr>\n              <th>부채</th>\n              <th>{balanceSheet.total.liabilitySum.toLocaleString()} 원</th>\n            </tr>\n          </thead>\n          <tbody>\n            {liabilities}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default BalanceSheet;\n","import React, {useEffect} from 'react';\nimport BalanceSheet from \"../../components/accountant/BalanceSheet\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getBalanceSheet} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\n\n\nfunction BalanceSheetContainer() {\n  const dispatch = useDispatch();\n\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getBalanceSheetLink, balanceSheet, errorResponse} = useSelector(({accountant}) => ({\n    getBalanceSheetLink: accountant.links.getBalanceSheet,\n    balanceSheet: accountant.balanceSheet,\n    errorResponse: accountant.errorResponse\n  }));\n\n\n  useEffect(() => {\n    dispatch(getBalanceSheet(getBalanceSheetLink, jwt));\n  }, [dispatch, getBalanceSheetLink, jwt]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  return balanceSheet ? (\n      <BalanceSheet\n        balanceSheet={balanceSheet}\n      />\n  ) : <Loading/>;\n}\n\n\nexport default BalanceSheetContainer;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\nimport BalanceSheetContainer from \"../../containers/accountant/BalanceSheetContainer\";\n\nfunction BalanceSheetPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <PageTemplate>\n      <BalanceSheetContainer/>\n    </PageTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default BalanceSheetPage;\n","import React from 'react';\nimport './IncomeStatementForm.scss';\n\nfunction IncomeStatementForm({onSubmit, errorMessage}) {\n  return (\n    <div className={\"income-statement-form\"}>\n      <h3>손익계산서 요청</h3>\n      <form onSubmit={onSubmit}>\n        <div className={\"date-area\"}>\n          <label> 시작\n            <input\n              name={\"beginDate\"}\n              type={\"date\"}\n            />\n          </label>\n          <label> 종료\n            <input\n              name={\"inclusiveEndDate\"}\n              type={\"date\"}\n            />\n          </label>\n        </div>\n        {errorMessage ? <div className={\"error\"}>{errorMessage}</div> : <></>}\n        <button>손익계산서 요청</button>\n      </form>\n    </div>\n  );\n}\n\nexport default IncomeStatementForm;\n","import React, {useEffect, useState} from 'react';\nimport IncomeStatementForm from \"../../components/accountant/IncomeStatementForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getIncomeStatement} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport {withRouter} from \"react-router-dom\";\n\n\nfunction IncomeStatementFormContainer({history}) {\n  const dispatch = useDispatch();\n\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getIncomeStatementLink, incomeStatement, errorResponse} = useSelector(({accountant}) => ({\n    getIncomeStatementLink: accountant.links.getIncomeStatement,\n    incomeStatement: accountant.incomeStatement,\n    errorResponse: accountant.errorResponse\n  }));\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const [beginDate, inclusiveEndDate] = e.target;\n    const begin = beginDate.value;\n    const end = inclusiveEndDate.value;\n    if ([begin, end].includes('')) {\n      setErrorMessage('날짜를 입력해 주세요.');\n      return;\n    }\n    dispatch(getIncomeStatement(getIncomeStatementLink, jwt, {begin, end}));\n  };\n\n  useEffect(() => {\n    if (incomeStatement) {\n      history.push('/income-statement');\n    }\n  }, [incomeStatement, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  return (\n    <IncomeStatementForm\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\n\nexport default withRouter(IncomeStatementFormContainer);\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport IncomeStatementFormContainer from \"../../containers/accountant/IncomeStatementFormContainer\";\nimport {Redirect} from \"react-router-dom\";\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\n\nfunction IncomeStatementFormPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <CentralTemplate>\n      <IncomeStatementFormContainer/>\n    </CentralTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default IncomeStatementFormPage;\n","import React from 'react';\nimport './IncomeStatement.scss';\n\nfunction AccountItem({account}) {\n  return (\n    <tr>\n      <td>{account.name}</td>\n      <td className={\"occurred\"}>{account.occurred.toLocaleString()} 원</td>\n      <td className={\"monthly-budget\"}>{account.monthlyBudget.toLocaleString()} 원</td>\n    </tr>\n  );\n}\n\nfunction IncomeStatement({incomeStatement}) {\n  const revenues = incomeStatement.revenues.map(revenue => <AccountItem key={revenue.id} account={revenue}/>);\n  const expenses = incomeStatement.expenses.map(expense => <AccountItem key={expense.id} account={expense}/>);\n\n  return (\n    <div className={\"income-statement\"}>\n      <div className={\"heading\"}>\n        <h3>손익계산서</h3>\n        <span>{incomeStatement.start} ~ {incomeStatement.inclusiveEnd} ({incomeStatement.days}일)</span>\n      </div>\n      <div className={\"profit\"}>\n        이익 &nbsp; {incomeStatement.total.profit.toLocaleString()} 원\n      </div>\n      <div className={\"detail\"}>\n        <table>\n          <thead>\n            <tr>\n              <th>수입</th>\n              <th>{incomeStatement.total.revenueSum.toLocaleString()} 원</th>\n              <th className={\"monthly-budget\"}>예산</th>\n            </tr>\n          </thead>\n          <tbody>\n            {revenues}\n          </tbody>\n        </table>\n        <div className={\"vertical-line\"}/>\n        <table>\n          <thead>\n            <tr>\n              <th>지출</th>\n              <th>{incomeStatement.total.expenseSum.toLocaleString()} 원</th>\n              <th className={\"monthly-budget\"}>예산</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default IncomeStatement;\n","import React, {useEffect} from 'react';\nimport IncomeStatement from \"../../components/accountant/IncomeStatement\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {initializeIncomeStatement} from \"../../modules/accountant\";\n\n\nfunction IncomeStatementContainer() {\n  const dispatch = useDispatch();\n\n  const {incomeStatement} = useSelector(({accountant}) => ({\n    incomeStatement: accountant.incomeStatement\n  }));\n\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeIncomeStatement());\n    }\n  }, [dispatch]);\n\n\n  return (\n    <IncomeStatement\n      incomeStatement={incomeStatement}\n    />\n  );\n}\n\n\nexport default IncomeStatementContainer;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\nimport IncomeStatementContainer from \"../../containers/accountant/IncomeStatementContainer\";\n\nfunction IncomeStatementPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {incomeStatement} = useSelector(({accountant}) => ({incomeStatement: accountant.incomeStatement}));\n\n  if (!jwt) return <Redirect to={\"/login\"}/>;\n  if (!incomeStatement) return <Redirect to={\"/income-statement-form\"}/>;\n  return (\n    <PageTemplate>\n      <IncomeStatementContainer/>\n    </PageTemplate>\n  );\n}\n\nexport default IncomeStatementPage;\n","import React from 'react';\nimport './NotFound.scss';\n\nfunction NotFound() {\n  return (\n    <div className={\"not-found\"}>\n      요청하신 페이지를 찾을 수 없습니다.\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport PageTemplate from \"../components/common/PageTemplate\";\nimport NotFound from \"../components/NotFound\";\n\nfunction NotFoundPage() {\n  return (\n    <PageTemplate>\n      <NotFound/>\n    </PageTemplate>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport './ServiceInformation.scss';\n\nfunction ServiceInformation() {\n  return (\n    <div className={\"service-information\"}>\n      ⓒ 2021. suloginscene@gmail.com.\n    </div>\n  );\n}\n\nexport default ServiceInformation;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport NavigationContainer from \"./containers/common/NavigationContainer\";\nimport HomePage from \"./pages/HomePage\";\nimport SignupPage from \"./pages/member/SignupPage\";\nimport VerifyPage from \"./pages/member/VerifyPage\";\nimport LoginPage from \"./pages/member/LoginPage\";\nimport MyPage from \"./pages/member/MyPage\";\nimport ForgetPage from \"./pages/member/ForgetPage\";\nimport AccountFormPage from \"./pages/accountant/AccountFormPage\";\nimport AccountListPage from \"./pages/accountant/AccountListPage\";\nimport AccountPage from \"./pages/accountant/AccountPage\";\nimport TransactionPage from \"./pages/accountant/TransactionPage\";\nimport LedgerPage from \"./pages/accountant/LedgerPage\";\nimport BalanceSheetPage from \"./pages/accountant/BalanceSheetPage\";\nimport IncomeStatementFormPage from \"./pages/accountant/IncomeStatementFormPage\";\nimport IncomeStatementPage from \"./pages/accountant/IncomeStatementPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport ServiceInformation from \"./components/common/ServiceInformation\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n\n      <header>\n        <NavigationContainer/>\n      </header>\n\n      <main>\n        <Switch>\n          <Route component={HomePage} path={\"/\"} exact/>\n\n          <Route component={SignupPage} path={\"/signup\"} exact/>\n          <Route component={VerifyPage} path={\"/verify\"} exact/>\n          <Route component={LoginPage} path={\"/login\"} exact/>\n          <Route component={MyPage} path={\"/my-page\"} exact/>\n          <Route component={ForgetPage} path={\"/forget\"} exact/>\n\n          <Route component={AccountFormPage} path={\"/account-form\"} exact/>\n          <Route component={AccountListPage} path={\"/account-list\"} exact/>\n          <Route component={AccountPage} path={\"/account/:id\"}/>\n          <Route component={TransactionPage} path={\"/transaction\"} exact/>\n\n          <Route component={LedgerPage} path={\"/ledger\"} exact/>\n          <Route component={BalanceSheetPage} path={\"/balance-sheet\"} exact/>\n          <Route component={IncomeStatementFormPage} path={\"/income-statement-form\"} exact/>\n          <Route component={IncomeStatementPage} path={\"/income-statement\"} exact/>\n\n          <Route component={NotFoundPage}/>\n        </Switch>\n      </main>\n\n      <footer>\n        <ServiceInformation/>\n      </footer>\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport {all} from 'redux-saga/effects';\nimport member, {memberSaga} from './member';\nimport accountant, {accountantSaga} from './accountant';\nimport loading from './loading';\n\nconst rootReducer = combineReducers({\n  member, accountant, loading\n});\n\nexport function* rootSaga() {\n  yield all([memberSaga(), accountantSaga()]);\n}\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {applyMiddleware, createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, {rootSaga} from \"./modules\";\nimport {memberIndex, setRefreshToken} from \"./modules/member\";\nimport {accountantIndex} from \"./modules/accountant\";\nimport {accountantServer, memberServer} from './properties';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nconst loadIndex = () => {\n  store.dispatch(memberIndex(memberServer + '/api'));\n  store.dispatch(accountantIndex(accountantServer + '/api'));\n};\n\nconst loadRefreshToken = () => {\n  const refreshToken = localStorage.getItem('refreshToken');\n  if (refreshToken) store.dispatch(setRefreshToken(refreshToken));\n};\n\nsagaMiddleware.run(rootSaga);\nloadIndex();\nloadRefreshToken();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}