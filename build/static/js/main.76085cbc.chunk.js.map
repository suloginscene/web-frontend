{"version":3,"sources":["components/common/Navigation.js","modules/loading.js","lib/api/createRequestSaga.js","lib/api/client.js","modules/member.js","lib/api/member.js","containers/common/NavigationContainer.js","components/common/PageTemplate.js","components/Home.js","pages/HomePage.js","components/common/CentralTemplate.js","lib/error/toErrorMessage.js","components/member/MemberForm.js","containers/member/SignupForm.js","lib/error/isValidEmail.js","pages/member/SignupPage.js","containers/member/VerifyForm.js","pages/member/VerifyPage.js","containers/member/LoginForm.js","pages/member/LoginPage.js","components/member/MemberInfo.js","containers/member/MemberInfoContainer.js","pages/member/MyPage.js","containers/member/ForgetForm.js","pages/member/ForgetPage.js","components/accountant/AccountForm.js","modules/accountant.js","lib/api/accountant.js","containers/accountant/AccountFormContainer.js","pages/accountant/AccountFormPage.js","components/accountant/AccountList.js","components/common/Loading.js","containers/accountant/AccountListContainer.js","pages/accountant/AccountListPage.js","components/accountant/Account.js","containers/accountant/AccountContainer.js","pages/accountant/AccountPage.js","components/accountant/TransactionForm.js","containers/accountant/TransactionFormContainer.js","pages/accountant/TransactionPage.js","components/accountant/Ledger.js","containers/accountant/LedgerContainer.js","pages/accountant/LedgerPage.js","components/accountant/BalanceSheet.js","containers/accountant/BalanceSheetContainer.js","pages/accountant/BalanceSheetPage.js","components/accountant/IncomeStatementForm.js","containers/accountant/IncomeStatementFormContainer.js","pages/accountant/IncomeStatementFormPage.js","components/accountant/IncomeStatement.js","containers/accountant/IncomeStatementContainer.js","pages/accountant/IncomeStatementPage.js","components/NotFound.js","pages/NotFoundPage.js","components/common/ServiceInformation.js","App.js","modules/index.js","index.js"],"names":["Navigation","jwt","onClickLogout","className","to","onClick","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","action","payload","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","error","client","axios","create","memberSaga","SET_JWT","CHANGE_FIELD","INITIALIZE_FORM","LOGOUT","MEMBER_INDEX","MEMBER_INDEX_SUCCESS","MEMBER_INDEX_FAILURE","SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAILURE","VERIFY","VERIFY_SUCCESS","VERIFY_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","FORGET","FORGET_SUCCESS","FORGET_FAILURE","MY_INFO","MY_INFO_SUCCESS","MY_INFO_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","WITHDRAW","WITHDRAW_SUCCESS","WITHDRAW_FAILURE","setJwt","changeField","form","key","value","initializeForm","logout","memberIndex","indexLink","signup","signupLink","username","password","verify","verificationLink","token","login","loginLink","forget","forgetLink","myInfo","myInfoLink","changePassword","changePasswordLink","newPassword","withdraw","withdrawLink","memberIndexSaga","get","signupSaga","post","verifySaga","loginSaga","forgetSaga","myInfoSaga","headers","changePasswordSaga","withdrawSaga","delete","takeLatest","initialState","links","passwordConfirm","newPasswordConfirm","verified","found","email","passwordChanged","withdrew","errorResponse","member","produce","draft","data","_links","href","issueJwt","onForgetPassword","withRouter","history","dispatch","useDispatch","useSelector","useEffect","push","localStorage","removeItem","PageTemplate","children","Home","HomePage","CentralTemplate","toErrorMessage","status","errorDescription","textMap","MemberForm","onChange","onSubmit","errorMessage","text","name","placeholder","Error","selectInputs","selectLinks","useState","setErrorMessage","e","target","preventDefault","includes","test","String","toLowerCase","length","SignupPage","VerifyPage","setItem","LoginPage","MemberInfo","onClickWithdraw","alert","window","confirm","MyPage","ForgetPage","moneyNameMap","ASSET","LIABILITY","REVENUE","EXPENSE","AccountForm","moneyName","id","htmlFor","money","accountantSaga","INITIALIZE_INCOME_STATEMENT","ACCOUNTANT_INDEX","ACCOUNTANT_INDEX_SUCCESS","ACCOUNTANT_INDEX_FAILURE","POST_ACCOUNT","POST_ACCOUNT_SUCCESS","POST_ACCOUNT_FAILURE","GET_ACCOUNTS","GET_ACCOUNTS_SUCCESS","GET_ACCOUNTS_FAILURE","GET_ACCOUNT","GET_ACCOUNT_SUCCESS","GET_ACCOUNT_FAILURE","CHANGE_NAME","CHANGE_NAME_SUCCESS","CHANGE_NAME_FAILURE","CHANGE_BUDGET","CHANGE_BUDGET_SUCCESS","CHANGE_BUDGET_FAILURE","DELETE_ACCOUNT","DELETE_ACCOUNT_SUCCESS","DELETE_ACCOUNT_FAILURE","GET_LEDGER","GET_LEDGER_SUCCESS","GET_LEDGER_FAILURE","GET_BALANCE_SHEET","GET_BALANCE_SHEET_SUCCESS","GET_BALANCE_SHEET_FAILURE","GET_INCOME_STATEMENT","GET_INCOME_STATEMENT_SUCCESS","GET_INCOME_STATEMENT_FAILURE","EXECUTE_TRANSACTION","EXECUTE_TRANSACTION_SUCCESS","EXECUTE_TRANSACTION_FAILURE","initializeIncomeStatement","accountantIndex","postAccount","postAccountLink","getAccounts","getAccountsLink","getAccount","getAccountLink","changeName","changeNameLink","newName","changeBudget","changeBudgetLink","newBudget","deleteAccount","deleteAccountLink","getLedger","getLedgerLink","getBalanceSheet","getBalanceSheetLink","getIncomeStatement","getIncomeStatementLink","begin","end","executeTransaction","executeTransactionLink","sourceId","destinationId","amount","description","accountantIndexSaga","postAccountSaga","getAccountsSaga","getAccountSaga","changeNameSaga","changeBudgetSaga","deleteAccountSaga","getLedgerSaga","getBalanceSheetSaga","getIncomeStatementSaga","executeTransactionSaga","clear","accountForm","modifyForm","transactionForm","posted","accounts","account","changed","deleted","ledger","balanceSheet","incomeStatement","executed","accountant","isNaN","AccountFormPage","AccountItem","AccountList","assets","liabilities","revenues","expenses","forEach","accountItem","Loading","AccountListContainer","AccountListPage","accountNameMap","Asset","Liability","Revenue","Expense","transactionSignMap","INCREASE","DECREASE","OCCUR","TransactionItem","createdAt","substring","Account","onSubmitName","onSubmitBudget","onClickDelete","typeName","transactions","singleTransactions","map","transaction","index","isDeletable","moneyAmount","simpleAccount","filter","Number","self","AccountPage","match","params","typeNameMap","TransactionForm","sources","destinations","setOptions","srcType","dstType","items","TransactionPage","transactionNameMap","SELL","PURCHASE_BY_CASH","PURCHASE_BY_CREDIT","BORROW","REPAY","TRANSFER","debit","credit","Ledger","doubleTransactions","LedgerContainer","LedgerPage","balance","BalanceSheet","asset","liability","total","net","assetSum","liabilitySum","BalanceSheetContainer","BalanceSheetPage","IncomeStatementForm","beginDate","inclusiveEndDate","IncomeStatementFormPage","occurred","monthlyBudget","IncomeStatement","revenue","expense","start","inclusiveEnd","days","profit","revenueSum","expenseSum","IncomeStatementContainer","IncomeStatementPage","NotFound","NotFoundPage","ServiceInformation","App","component","path","exact","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","memberServer","accountantServer","getItem","loadUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76085cbc.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navigation.scss';\n\nfunction Navigation({jwt, onClickLogout}) {\n  function selectMenus() {\n    return jwt ?\n      <>\n        <div className={\"menu\"}>\n          <Link to={\"/transaction\"}>거래</Link>\n        </div>\n\n        <div className={\"menu\"}>\n          <span>계정</span>\n          <div className={\"dropdown account-dropdown\"}>\n            <Link to={\"/account-list\"}>목록</Link>\n            <Link to={\"/account-form\"}>등록</Link>\n          </div>\n        </div>\n\n        <div className={\"menu\"}>\n          <span>보고서</span>\n          <div className={\"dropdown report-dropdown\"}>\n            <Link to={\"/ledger\"}>복식장부</Link>\n            <Link to={\"/balance-sheet\"}>재무상태표</Link>\n            <Link to={\"/income-statement-form\"}>손익계산서</Link>\n          </div>\n        </div>\n\n        <div className={\"menu\"}>\n          <span>회원</span>\n          <div className={\"dropdown member-dropdown\"}>\n            <Link to={\"/my-page\"}>내 정보</Link>\n            <span onClick={onClickLogout}>로그아웃</span>\n          </div>\n        </div>\n      </>\n      : <Link to={\"/login\"}>로그인</Link>;\n  }\n\n  return (\n    <nav className={\"navigation\"}>\n      <div className={\"brand\"}>\n        <Link to={\"/\"}>SCENE</Link>\n      </div>\n      <div className={\"menus\"}>\n        {selectMenus()}\n      </div>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import {createAction, handleActions} from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\nexport const startLoading = createAction(START_LOADING, requestType => requestType);\nexport const finishLoading = createAction(FINISH_LOADING, requestType => requestType);\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false\n    })\n  },\n  initialState\n);\n\nexport default loading;\n","import {call, put} from 'redux-saga/effects';\nimport {finishLoading, startLoading} from \"../../modules/loading\";\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function* (action) {\n    yield put(startLoading(type));\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e.response,\n        error: true\n      });\n    }\n    yield put(finishLoading(type));\n  };\n};\n","import axios from 'axios';\n\nconst client = axios.create();\n\nexport default client;\n","import {createAction, handleActions} from 'redux-actions';\nimport produce from 'immer';\nimport {takeLatest} from 'redux-saga/effects';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/api/createRequestSaga';\nimport * as memberApi from '../lib/api/member';\n\nconst SET_JWT = \"member/SET_JWT\";\nconst CHANGE_FIELD = \"member/CHANGE_FIELD\";\nconst INITIALIZE_FORM = \"member/INITIALIZE_FORM\";\nconst LOGOUT = \"member/LOGOUT\";\nconst [MEMBER_INDEX, MEMBER_INDEX_SUCCESS, MEMBER_INDEX_FAILURE] = createRequestActionTypes(\"member/MEMBER_INDEX\");\nconst [SIGNUP, SIGNUP_SUCCESS, SIGNUP_FAILURE] = createRequestActionTypes(\"member/SIGNUP\");\nconst [VERIFY, VERIFY_SUCCESS, VERIFY_FAILURE] = createRequestActionTypes(\"member/VERIFY\");\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\"member/LOGIN\");\nconst [FORGET, FORGET_SUCCESS, FORGET_FAILURE] = createRequestActionTypes(\"member/FORGET\");\nconst [MY_INFO, MY_INFO_SUCCESS, MY_INFO_FAILURE] = createRequestActionTypes(\"member/MY_INFO\");\nconst [CHANGE_PASSWORD, CHANGE_PASSWORD_SUCCESS, CHANGE_PASSWORD_FAILURE] = createRequestActionTypes(\"member/CHANGE_PASSWORD\");\nconst [WITHDRAW, WITHDRAW_SUCCESS, WITHDRAW_FAILURE] = createRequestActionTypes(\"member/WITHDRAW\");\n\nexport const setJwt = createAction(SET_JWT, (jwt) => (jwt));\nexport const changeField = createAction(CHANGE_FIELD, ({form, key, value}) => ({form, key, value}));\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => (form));\nexport const logout = createAction(LOGOUT);\nexport const memberIndex = createAction(MEMBER_INDEX, (indexLink) => ({indexLink}));\nexport const signup = createAction(SIGNUP, (signupLink, {username, password}) => ({signupLink, username, password}));\nexport const verify = createAction(VERIFY, (verificationLink, {token}) => ({verificationLink, token}));\nexport const login = createAction(LOGIN, (loginLink, {username, password}) => ({loginLink, username, password}));\nexport const forget = createAction(FORGET, (forgetLink, {username}) => ({forgetLink, username}));\nexport const myInfo = createAction(MY_INFO, (myInfoLink, jwt) => ({myInfoLink, jwt}));\nexport const changePassword = createAction(CHANGE_PASSWORD, (changePasswordLink, jwt, {newPassword}) => ({\n  changePasswordLink, jwt, newPassword\n}));\nexport const withdraw = createAction(WITHDRAW, (withdrawLink, jwt) => ({withdrawLink, jwt}));\n\nconst memberIndexSaga = createRequestSaga(MEMBER_INDEX, memberApi.index);\nconst signupSaga = createRequestSaga(SIGNUP, memberApi.signup);\nconst verifySaga = createRequestSaga(VERIFY, memberApi.verify);\nconst loginSaga = createRequestSaga(LOGIN, memberApi.login);\nconst forgetSaga = createRequestSaga(FORGET, memberApi.forget);\nconst myInfoSaga = createRequestSaga(MY_INFO, memberApi.myInfo);\nconst changePasswordSaga = createRequestSaga(CHANGE_PASSWORD, memberApi.changePassword);\nconst withdrawSaga = createRequestSaga(WITHDRAW, memberApi.withdraw);\n\nexport function* memberSaga() {\n  yield takeLatest(MEMBER_INDEX, memberIndexSaga);\n  yield takeLatest(SIGNUP, signupSaga);\n  yield takeLatest(VERIFY, verifySaga);\n  yield takeLatest(LOGIN, loginSaga);\n  yield takeLatest(FORGET, forgetSaga);\n  yield takeLatest(MY_INFO, myInfoSaga);\n  yield takeLatest(CHANGE_PASSWORD, changePasswordSaga);\n  yield takeLatest(WITHDRAW, withdrawSaga);\n}\n\nconst initialState = {\n  links: {\n    signup: null,\n    login: null,\n    myInfo: null,\n    forget: null,\n    verify: null,\n    changePassword: null,\n    withdraw: null\n  },\n  signup: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  verify: {\n    token: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  forget: {\n    username: ''\n  },\n  changePassword: {\n    newPassword: '',\n    newPasswordConfirm: '',\n  },\n  jwt: null,\n  verified: null,\n  found: null,\n  email: null,\n  passwordChanged: null,\n  withdrew: null,\n  errorResponse: null\n};\n\nconst member = handleActions(\n  {\n    [SET_JWT]: (state, {payload: jwt}) => ({\n      ...state, jwt\n    }),\n    [CHANGE_FIELD]: (state, {payload: {form, key, value}}) => (\n      produce(state, draft => {\n        draft[form][key] = value;\n      })\n    ),\n    [INITIALIZE_FORM]: (state, {payload: form}) => ({\n      ...state,\n      [form]: initialState[form],\n      verified: null,\n      found: null,\n      email: null,\n      passwordChanged: null,\n      withdrew: null,\n    }),\n    [LOGOUT]: (state) => ({\n      ...state,\n      jwt: null\n    }),\n    [MEMBER_INDEX_SUCCESS]: (state, {payload: response}) => (\n      produce(state, draft => {\n        draft.links.signup = response.data._links.signup.href;\n        draft.links.login = response.data._links.issueJwt.href;\n        draft.links.myInfo = response.data._links.myInfo.href;\n        draft.links.forget = response.data._links.onForgetPassword.href;\n        draft.errorResponse = null;\n      })\n    ),\n    [MEMBER_INDEX_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [SIGNUP_SUCCESS]: (state, {payload: response}) => (\n      produce(state, draft => {\n        draft.links.verify = response.data._links.verify.href;\n        draft.errorResponse = null;\n      })\n    ),\n    [SIGNUP_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [VERIFY_SUCCESS]: (state) => ({\n      ...state,\n      verified: true,\n      errorResponse: null\n    }),\n    [VERIFY_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [LOGIN_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      jwt: response.data,\n      errorResponse: null\n    }),\n    [LOGIN_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [FORGET_SUCCESS]: (state) => ({\n      ...state,\n      found: true,\n      errorResponse: null\n    }),\n    [FORGET_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [MY_INFO_SUCCESS]: (state, {payload: response}) => (\n      produce(state, draft => {\n        draft.email = response.data.email;\n        draft.links.changePassword = response.data._links.changePassword.href;\n        draft.links.withdraw = response.data._links.withdraw.href;\n        draft.errorResponse = null;\n      })\n    ),\n    [MY_INFO_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [CHANGE_PASSWORD_SUCCESS]: (state) => ({\n      ...state,\n      jwt: null,\n      passwordChanged: true,\n      errorResponse: null\n    }),\n    [CHANGE_PASSWORD_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [WITHDRAW_SUCCESS]: (state) => ({\n      ...state,\n      jwt: null,\n      withdrew: true,\n      errorResponse: null\n    }),\n    [WITHDRAW_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    })\n  },\n  initialState\n);\n\nexport default member;\n","import client from './client';\n\nexport const index = ({indexLink}) =>\n  client.get(indexLink);\n\nexport const signup = ({signupLink, username, password}) =>\n  client.post(signupLink, {username, password});\n\nexport const verify = ({verificationLink, token}) =>\n  client.post(verificationLink, {token});\n\nexport const login = ({loginLink, username, password}) =>\n  client.post(loginLink, {username, password});\n\nexport const forget = ({forgetLink, username}) =>\n  client.post(forgetLink, {username});\n\nexport const myInfo = ({myInfoLink, jwt}) =>\n  client.get(myInfoLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const changePassword = ({changePasswordLink, jwt, newPassword}) =>\n  client.put(changePasswordLink, {newPassword}, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const withdraw = ({withdrawLink, jwt}) =>\n  client.delete(withdrawLink, {headers: {'X-AUTH-TOKEN': jwt}});\n","import React, {useEffect} from 'react';\nimport Navigation from \"../../components/common/Navigation\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../../modules/member\";\nimport {withRouter} from \"react-router-dom\";\n\nfunction NavigationContainer({history}) {\n  const dispatch = useDispatch();\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n\n  const onClickLogout = () => dispatch(logout());\n\n  useEffect(() => {\n    if (!jwt) {\n      history.push('/');\n      localStorage.removeItem('jwt');\n    }\n  }, [jwt, history]);\n\n  return (\n    <Navigation\n      jwt={jwt}\n      onClickLogout={onClickLogout}\n    />\n  );\n}\n\nexport default withRouter(NavigationContainer);\n","import React from 'react';\nimport './PageTemplate.scss';\n\nfunction PageTemplate({children}) {\n  return (\n    <div className={\"page-template\"}>\n      {children}\n    </div>\n  );\n}\n\nexport default PageTemplate;\n","import React from 'react';\nimport './Home.scss';\n\nfunction Home() {\n  return (\n    <div className={\"home\"}>\n\n      <h1>SCENE</h1>\n      <p>\n        개인이 제공하고 있는 서비스입니다. <br/>\n        가계부 외에도 생활 관리 기능을 개발할 계획입니다. <br/>\n        안정적인 운영을 지향하지만 보장할 수는 없습니다. <br/>\n        suloginscene@gmail.com\n      </p>\n\n      <hr/>\n\n      <h2>복식부기 가계부</h2>\n      <p>\n        자금의 흐름을 원인과 결과로 파악할 수 있습니다. 개인이 사용하기에 편리하도록 단순화하였습니다.\n        <br/><small> * 정식 회계용어에 정확히 대응하지 않을 수 있습니다.</small>\n        <br/><small> * 21억 이하를 다루며, 모바일에서는 일부 정보가 생략될 수 있습니다.</small>\n      </p>\n\n      <h3>계정</h3>\n      <div>\n        <p>\n          자산과 부채는 현 시점의 잔액을 갖는 <b>저량</b>이며, 수입과 지출은 기간 내의 발생량을 갖는 <b>유량</b>입니다.<br/>\n          각 계정 화면에서 거래 기록을 볼 수 있습니다. 저량 계정의 경우에만 기초 금액 등록이 첫 거래로 기록되어 있습니다.\n        </p>\n        <table>\n          <thead>\n            <tr>\n              <th>유형</th>\n              <th>예시</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>자산</th>\n              <td>현금, 저축 계좌, 빌려준 돈, 전세금 등 <small>* 주식 및 부동산도 포함되나 금액 변동에 주의</small></td>\n            </tr>\n            <tr>\n              <th>부채</th>\n              <td>신용카드, 대출 계좌, 빌린 돈 등</td>\n            </tr>\n            <tr>\n              <th>수입</th>\n              <td>근로소득, 사업소득, 금융소득 등</td>\n            </tr>\n            <tr>\n              <th>지출</th>\n              <td>식비, 교통/통신비, 생활비, 경조사 등</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <h3>거래</h3>\n      <div>\n        <p>\n          다양한 경제행동을 계정 간 이동 유형에 따라 최소화하였습니다.\n          <br/><small> * 해당 유형의 가장 대표적인 행동을 이름으로 하였으나, 이름과 행동이 어울리지 않는 경우가 존재합니다.</small><br/>\n          어떤 경제행동을 어떤 거래유형으로 처리해야 하는지는 다소간 개인의 판단에 속합니다.\n          <br/><small> * 예를 들어,\n          주식을 자산으로 본다면 매수-매도 시 '이동' 처리하고, 등락을 '판매(투자수익)' 또는 '현금구매(투자손해)'로 처리할 수 있습니다.\n          주식을 일반 사물처럼 취급한다면 매수를 '현금구매(주식구매)', '판매(주식판매)'로 처리할 수 있습니다.\n          전자는 복잡하지만 주식 계정의 역사를 추적할 수 있으며, 후자는 편리하지만 주식 보유 중의 자산이 과소평가됩니다. </small>\n        </p>\n        <table className={\"transaction-description-table\"}>\n          <thead>\n            <tr>\n              <th>유형</th>\n              <th>이동</th>\n              <th>예시</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>판매</th>\n              <td>수입 발생 -> 자산 증가</td>\n              <td>모든 소득 <small>* 신용 판매는 빌려준 돈에 해당하는 자산 계정 사용</small></td>\n            </tr>\n            <tr>\n              <th>현금구매</th>\n              <td>자산 감소 -> 지출 발생</td>\n              <td>현금, 체크카드 등의 단순 소비</td>\n            </tr>\n            <tr>\n              <th>신용구매</th>\n              <td>부채 증가 -> 지출 발생</td>\n              <td>신용카드, 외상 등의 단순 소비</td>\n            </tr>\n            <tr>\n              <th>대출</th>\n              <td>부채 증가 -> 자산 증가</td>\n              <td>자금 자체의 대출</td>\n            </tr>\n            <tr>\n              <th>상환</th>\n              <td>자산 감소 -> 부채 감소</td>\n              <td>신용카드 정산 및 대출금 상환</td>\n            </tr>\n            <tr>\n              <th>이동</th>\n              <td>자산 감소 -> 자산 증가</td>\n              <td>내 자산계정 간 이체 및 자산성 구매 <small>* 부동산 구매 등</small></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <h3>보고서</h3>\n      <div>\n        <p>\n          장부, 재무상태표, 손익계산서, 세 종류의 보고서를 제공합니다.\n        </p>\n        <p>\n          <b>장부</b>는 계정 간 일어난 모든 거래를 기록합니다. (저량 계정의 기초 금액 등록은 제외됩니다.)\n          자금 흐름의 기록이므로 금액은 언제나 양수이며, 잔액 개념은 존재하지 않습니다.\n          계정 이름을 변경하거나, 계정을 삭제한 경우에도 장부는 변하지 않습니다.\n        </p>\n        <p>\n          <b>재무상태표</b>는 자산과 부채의 잔액 현황을 보여줍니다.\n          자산과 부채는 저량이므로 조회 시점의 상태만을 보여줍니다.\n          계정 이름 변경은 반영되며, 저량 계정은 잔액이 남아있는 경우 삭제할 수 없으므로 신뢰할 수 있는 상태를 유지합니다.\n        </p>\n        <p>\n          <b>손익계산서</b>는 수입과 지출의 발생 현황을 보여줍니다.\n          수입과 지출은 유량이므로 조회할 기간을 정해서 요청하여야 합니다.\n          계정 이름 변경은 반영되며, 계정을 삭제하는 경우 손익계산서에서 조회되지 않으므로 주의가 필요합니다.\n        </p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport PageTemplate from \"../components/common/PageTemplate\";\nimport Home from \"../components/Home\";\n\nfunction HomePage() {\n  return (\n    <PageTemplate>\n      <Home/>\n    </PageTemplate>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport './CentralTemplate.scss';\n\nfunction CentralTemplate({children}) {\n  return (\n    <div className={\"central-template\"}>\n      <div className={\"white-box\"}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default CentralTemplate;\n","export default function toErrorMessage(errorResponse) {\n  const status = errorResponse.status;\n  if (status === 400) {\n    const error = errorResponse.data.error;\n    const errorDescription = errorResponse.data.errorDescription;\n    switch (error) {\n      // TODO exception type\n      case 'RequestException':\n        return errorDescription;\n      default:\n        return error + ': ' + errorDescription;\n    }\n  } else {\n    return status + ' ' + errorResponse.data;\n  }\n}\n","import React from 'react';\nimport './MemberForm.scss';\nimport {Link} from \"react-router-dom\";\n\nconst textMap = {\n  signup: '회원가입',\n  verify: '인증',\n  login: '로그인',\n  forget: '비밀번호 찾기'\n};\n\nfunction MemberForm({type, form, onChange, onSubmit, errorMessage}) {\n  const text = textMap[type];\n\n  function selectInputs() {\n    switch (text) {\n      case '회원가입':\n        return (\n          <>\n            <input\n              name={\"username\"}\n              type={\"text\"}\n              placeholder={\"이메일\"}\n              onChange={onChange}\n              value={form.username}\n            />\n            <input\n              name={\"password\"}\n              type={\"password\"}\n              placeholder={\"비밀번호\"}\n              onChange={onChange}\n              value={form.password}\n            />\n            <input\n              name={\"passwordConfirm\"}\n              type={\"password\"}\n              placeholder={\"비밀번호 확인\"}\n              onChange={onChange}\n              value={form.passwordConfirm}\n            />\n          </>\n        );\n      case '인증':\n        return (\n          <>\n            <input\n              name={\"token\"}\n              type={\"text\"}\n              placeholder={\"이메일 인증 토큰\"}\n              onChange={onChange}\n              value={form.token}\n            />\n          </>\n        );\n      case '로그인':\n        return (\n          <>\n            <input\n              name={\"username\"}\n              type={\"text\"}\n              placeholder={\"이메일\"}\n              onChange={onChange}\n              value={form.username}\n            />\n            <input\n              name={\"password\"}\n              type={\"password\"}\n              placeholder={\"비밀번호\"}\n              onChange={onChange}\n              value={form.password}\n            />\n          </>\n        );\n      case '비밀번호 찾기':\n        return (\n          <>\n            <input\n              name={\"username\"}\n              type={\"text\"}\n              placeholder={\"이메일\"}\n              onChange={onChange}\n              value={form.username}\n            />\n          </>\n        );\n      default:\n        throw new Error(\"타입이 적절하지 않습니다.\");\n    }\n  }\n\n  function selectLinks() {\n    switch (text) {\n      case '회원가입':\n        return (\n          <>\n            <Link to={\"/login\"}>로그인</Link>\n            <Link to={\"/forget\"}>비밀번호 찾기</Link>\n          </>\n        );\n      case '인증':\n        return (\n          <>\n          </>\n        );\n      case '로그인':\n        return (\n          <>\n            <Link to={\"/signup\"}>회원가입</Link>\n            <Link to={\"/forget\"}>비밀번호 찾기</Link>\n          </>\n        );\n      case '비밀번호 찾기':\n        return (\n          <>\n            <Link to={\"/signup\"}>회원가입</Link>\n            <Link to={\"/login\"}>로그인</Link>\n          </>\n        );\n      default:\n        throw new Error(\"타입이 적절하지 않습니다.\");\n    }\n  }\n\n  return (\n    <div className={\"member-form\"}>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        {selectInputs()}\n        {errorMessage ? <div className={\"error\"}>{errorMessage}</div> : <></>}\n        <button type={\"submit\"}>{text}</button>\n      </form>\n      <div className={\"links\"}>\n        {selectLinks()}\n      </div>\n    </div>\n  );\n}\n\nexport default MemberForm;\n","import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, initializeForm, signup} from \"../../modules/member\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport MemberForm from \"../../components/member/MemberForm\";\nimport {withRouter} from 'react-router-dom';\nimport isValidEmail from \"../../lib/error/isValidEmail\";\n\nfunction SignupForm({history}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {form, signupLink, verificationLink, errorResponse} = useSelector(({member}) => ({\n      form: member.signup,\n      signupLink: member.links.signup,\n      verificationLink: member.links.verify,\n      errorResponse: member.errorResponse\n    })\n  );\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'signup', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {username, password, passwordConfirm} = form;\n    if ([username, password, passwordConfirm].includes('')) {\n      setErrorMessage(\"빈 칸을 모두 입력해 주세요.\");\n      return;\n    }\n    if (!isValidEmail(username)) {\n      setErrorMessage(\"이메일 형식이 올바르지 않습니다.\");\n      return;\n    }\n    if (password.length < 8) {\n      setErrorMessage(\"비밀번호는 8자 이상이어야 합니다.\");\n      return;\n    }\n    if (password !== passwordConfirm) {\n      setErrorMessage(\"비밀번호를 다시 확인해 주세요.\");\n      return;\n    }\n    dispatch(signup(signupLink, {username, password}));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('signup'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (verificationLink) {\n      history.push('/verify');\n    }\n  }, [verificationLink, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return (\n    <MemberForm\n      type=\"signup\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\nexport default withRouter(SignupForm);\n","export default function isValidEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport SignupForm from \"../../containers/member/SignupForm\";\n\nfunction SignupPage() {\n  return (\n    <CentralTemplate>\n      <SignupForm/>\n    </CentralTemplate>\n  );\n}\n\nexport default SignupPage;\n","import React, {useEffect, useState} from 'react';\nimport MemberForm from \"../../components/member/MemberForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, initializeForm, verify} from \"../../modules/member\";\nimport {withRouter} from 'react-router-dom';\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\n\nfunction VerifyForm({history}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {form, verificationLink, verified, errorResponse} = useSelector(({member}) => ({\n    form: member.verify,\n    verificationLink: member.links.verify,\n    verified: member.verified,\n    errorResponse: member.errorResponse\n  }));\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'verify', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {token} = form;\n    if (token.length !== 6) {\n      setErrorMessage(\"토큰을 다시 확인해주세요.\");\n      return;\n    }\n    dispatch(verify(verificationLink, {token}));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('verify'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (verified) {\n      history.push('/login');\n    }\n  }, [verified, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return (\n    <MemberForm\n      type=\"verify\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\nexport default withRouter(VerifyForm);\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport VerifyForm from \"../../containers/member/VerifyForm\";\n\nfunction VerifyPage() {\n  return (\n    <CentralTemplate>\n      <VerifyForm/>\n    </CentralTemplate>\n  );\n}\n\nexport default VerifyPage;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {changeField, initializeForm, login} from \"../../modules/member\";\nimport MemberForm from \"../../components/member/MemberForm\";\nimport {withRouter} from 'react-router-dom';\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\n\nfunction LoginForm({history}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {form, loginLink, jwt, errorResponse} = useSelector(({member}) => ({\n      form: member.login,\n      loginLink: member.links.login,\n      jwt: member.jwt,\n      errorResponse: member.errorResponse\n    })\n  );\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'login', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {username, password} = form;\n    dispatch(login(loginLink, {username, password}));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (jwt) {\n      history.push('/');\n      localStorage.setItem('jwt', jwt);\n    }\n  }, [jwt, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return (\n    <MemberForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport LoginForm from \"../../containers/member/LoginForm\";\n\nfunction LoginPage() {\n  return (\n    <CentralTemplate>\n      <LoginForm/>\n    </CentralTemplate>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport './MemberInfo.scss';\n\nfunction MemberInfo({email, form, onChange, onSubmit, onClickWithdraw}) {\n  return (\n    <div className={\"member-info\"}>\n\n      <div className={\"info\"}>\n        <h3>이메일</h3>\n        <div className={\"email\"}>{email}</div>\n      </div>\n\n      <div className={\"change\"}>\n        <h3>비밀번호 변경</h3>\n        <form onSubmit={onSubmit}>\n          <input\n            name={\"newPassword\"}\n            type={\"password\"}\n            placeholder={\"새 비밀번호\"}\n            onChange={onChange}\n            value={form.newPassword}\n          />\n          <input\n            name={\"newPasswordConfirm\"}\n            type={\"password\"}\n            placeholder={\"새 비밀번호 확인\"}\n            onChange={onChange}\n            value={form.newPasswordConfirm}\n          />\n          <button type={\"submit\"}>변경하기</button>\n        </form>\n      </div>\n\n      <div className={\"withdraw\"}>\n        <h3>회원 탈퇴</h3>\n        <button onClick={onClickWithdraw}>탈퇴하기</button>\n      </div>\n\n    </div>\n  );\n}\n\nexport default MemberInfo;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport MemberInfo from \"../../components/member/MemberInfo\";\nimport {changeField, changePassword, initializeForm, myInfo, withdraw} from \"../../modules/member\";\nimport {withRouter} from \"react-router-dom\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\n\nfunction MemberInfoContainer({history}) {\n  const dispatch = useDispatch();\n  const {jwt, myInfoLink, email, changePasswordLink, form, passwordChanged, withdrawLink, withdrew, errorResponse}\n    = useSelector(({member}) => ({\n      jwt: member.jwt,\n      myInfoLink: member.links.myInfo,\n      email: member.email,\n      changePasswordLink: member.links.changePassword,\n      form: member.changePassword,\n      passwordChanged: member.passwordChanged,\n      withdrawLink: member.links.withdraw,\n      withdrew: member.withdrew,\n      errorResponse: member.errorResponse\n    })\n  );\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'changePassword', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {newPassword, newPasswordConfirm} = form;\n    if (newPassword.length < 8) {\n      alert(\"비밀번호는 8자 이상이어야 합니다.\");\n      return;\n    }\n    if (newPassword !== newPasswordConfirm) {\n      alert(\"비밀번호를 다시 확인해 주세요.\");\n      return;\n    }\n    dispatch(changePassword(changePasswordLink, jwt, {newPassword}));\n  };\n\n  const onClickWithdraw = () => {\n    if (window.confirm(\"정말로 탈퇴하시겠습니까?\")) {\n      dispatch(withdraw(withdrawLink, jwt));\n    }\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('changePassword'));\n    dispatch(myInfo(myInfoLink, jwt));\n  }, [dispatch, myInfoLink, jwt]);\n\n  useEffect(() => {\n    if (passwordChanged) {\n      alert(\"비밀번호가 변경되었습니다.\");\n      history.push('/login');\n    }\n  }, [passwordChanged, history]);\n\n  useEffect(() => {\n    if (withdrew) {\n      // TODO clear accountant\n      history.push('/');\n    }\n  }, [withdrew, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return (\n    <MemberInfo\n      email={email}\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      onClickWithdraw={onClickWithdraw}\n    />\n  );\n}\n\nexport default withRouter(MemberInfoContainer);\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport MemberInfoContainer from \"../../containers/member/MemberInfoContainer\";\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction MyPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <CentralTemplate>\n      <MemberInfoContainer/>\n    </CentralTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default MyPage;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, forget, initializeForm} from \"../../modules/member\";\nimport MemberForm from \"../../components/member/MemberForm\";\nimport {withRouter} from \"react-router-dom\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\n\nfunction ForgetForm({history}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {form, forgetLink, found, errorResponse} = useSelector(({member}) => ({\n      form: member.forget,\n      forgetLink: member.links.forget,\n      found: member.found,\n      errorResponse: member.errorResponse\n    })\n  );\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'forget', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {username} = form;\n    dispatch(forget(forgetLink, {username}));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('forget'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (found) {\n      history.push('/login');\n    }\n  }, [found, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return (\n    <MemberForm\n      type=\"forget\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\nexport default withRouter(ForgetForm);\n","import React from 'react';\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport ForgetForm from \"../../containers/member/ForgetForm\";\n\nfunction ForgetPage() {\n  return (\n    <CentralTemplate>\n      <ForgetForm/>\n    </CentralTemplate>\n  );\n}\n\nexport default ForgetPage;\n","import React from 'react';\nimport './AccountForm.scss'\n\nconst moneyNameMap = {\n  ASSET: '잔액',\n  LIABILITY: '잔액',\n  REVENUE: '예산',\n  EXPENSE: '예산',\n  '': '금액'\n};\n\nfunction AccountForm({form, onChange, onSubmit, errorMessage}) {\n  const moneyName = moneyNameMap[form.type];\n  return (\n    <div className={\"account-form\"}>\n      <h3>계정 등록</h3>\n      <form onSubmit={onSubmit}>\n        <div className={\"radio-area\"}>\n          <input name={\"type\"} type={\"radio\"} value={\"ASSET\"} id={\"asset\"} onChange={onChange}/>\n          <label htmlFor={\"asset\"}>자산</label>\n          <input name={\"type\"} type={\"radio\"} value={\"LIABILITY\"} id={\"liability\"} onChange={onChange}/>\n          <label htmlFor={\"liability\"}>부채</label>\n          <input name={\"type\"} type={\"radio\"} value={\"REVENUE\"} id={\"revenue\"} onChange={onChange}/>\n          <label htmlFor={\"revenue\"}>수입</label>\n          <input name={\"type\"} type={\"radio\"} value={\"EXPENSE\"} id={\"expense\"} onChange={onChange}/>\n          <label htmlFor={\"expense\"}>지출</label>\n        </div>\n        <div className={\"input-area\"}>\n          <input\n            name={\"name\"}\n            type={\"text\"}\n            placeholder={\"계정 이름\"}\n            onChange={onChange}\n            value={form.name}\n          />\n          <input\n            name={\"money\"}\n            type={\"text\"}\n            placeholder={moneyName}\n            onChange={onChange}\n            value={form.money}\n          />\n        </div>\n        {errorMessage ? <div className={\"error\"}>{errorMessage}</div> : <></>}\n        <button>계정 등록</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AccountForm;\n","import createRequestSaga, {createRequestActionTypes} from \"../lib/api/createRequestSaga\";\nimport {createAction, handleActions} from \"redux-actions\";\nimport * as accountantApi from \"../lib/api/accountant\";\nimport {takeLatest} from \"redux-saga/effects\";\nimport produce from \"immer\";\n\nconst CHANGE_FIELD = \"accountant/CHANGE_FIELD\";\nconst INITIALIZE_FORM = \"accountant/INITIALIZE_FORM\";\nconst INITIALIZE_INCOME_STATEMENT = \"accountant/INITIALIZE_INCOME_STATEMENT\";\nconst [ACCOUNTANT_INDEX, ACCOUNTANT_INDEX_SUCCESS, ACCOUNTANT_INDEX_FAILURE] = createRequestActionTypes(\"accountant/ACCOUNTANT_INDEX\");\nconst [POST_ACCOUNT, POST_ACCOUNT_SUCCESS, POST_ACCOUNT_FAILURE] = createRequestActionTypes(\"accountant/POST_ACCOUNT\");\nconst [GET_ACCOUNTS, GET_ACCOUNTS_SUCCESS, GET_ACCOUNTS_FAILURE] = createRequestActionTypes(\"accountant/GET_ACCOUNTS\");\nconst [GET_ACCOUNT, GET_ACCOUNT_SUCCESS, GET_ACCOUNT_FAILURE] = createRequestActionTypes(\"accountant/GET_ACCOUNT\");\nconst [CHANGE_NAME, CHANGE_NAME_SUCCESS, CHANGE_NAME_FAILURE] = createRequestActionTypes(\"accountant/CHANGE_NAME\");\nconst [CHANGE_BUDGET, CHANGE_BUDGET_SUCCESS, CHANGE_BUDGET_FAILURE] = createRequestActionTypes(\"accountant/CHANGE_BUDGET\");\nconst [DELETE_ACCOUNT, DELETE_ACCOUNT_SUCCESS, DELETE_ACCOUNT_FAILURE] = createRequestActionTypes(\"accountant/DELETE_ACCOUNT\");\nconst [GET_LEDGER, GET_LEDGER_SUCCESS, GET_LEDGER_FAILURE] = createRequestActionTypes(\"accountant/GET_LEDGER\");\nconst [GET_BALANCE_SHEET, GET_BALANCE_SHEET_SUCCESS, GET_BALANCE_SHEET_FAILURE] = createRequestActionTypes(\"accountant/GET_BALANCE_SHEET\");\nconst [GET_INCOME_STATEMENT, GET_INCOME_STATEMENT_SUCCESS, GET_INCOME_STATEMENT_FAILURE] = createRequestActionTypes(\"accountant/GET_INCOME_STATEMENT\");\nconst [EXECUTE_TRANSACTION, EXECUTE_TRANSACTION_SUCCESS, EXECUTE_TRANSACTION_FAILURE] = createRequestActionTypes(\"accountant/EXECUTE_TRANSACTION\");\n\nexport const changeField = createAction(CHANGE_FIELD, ({form, key, value}) => ({form, key, value}));\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => (form));\nexport const initializeIncomeStatement = createAction(INITIALIZE_INCOME_STATEMENT, () => ({}));\nexport const accountantIndex = createAction(ACCOUNTANT_INDEX, (indexLink) => ({indexLink}));\nexport const postAccount = createAction(POST_ACCOUNT, (postAccountLink, jwt, {type, name, money}) => ({\n  postAccountLink, jwt, type, name, money\n}));\nexport const getAccounts = createAction(GET_ACCOUNTS, (getAccountsLink, jwt) => ({getAccountsLink, jwt}));\nexport const getAccount = createAction(GET_ACCOUNT, (getAccountLink, jwt) => ({getAccountLink, jwt}));\nexport const changeName = createAction(CHANGE_NAME, (changeNameLink, jwt, {newName}) => ({\n  changeNameLink, jwt, newName\n}));\nexport const changeBudget = createAction(CHANGE_BUDGET, (changeBudgetLink, jwt, {newBudget}) => ({\n  changeBudgetLink, jwt, newBudget\n}));\nexport const deleteAccount = createAction(DELETE_ACCOUNT, (deleteAccountLink, jwt) => ({deleteAccountLink, jwt}));\nexport const getLedger = createAction(GET_LEDGER, (getLedgerLink, jwt) => ({getLedgerLink, jwt}));\nexport const getBalanceSheet = createAction(GET_BALANCE_SHEET, (getBalanceSheetLink, jwt) => ({\n  getBalanceSheetLink, jwt\n}));\nexport const getIncomeStatement = createAction(GET_INCOME_STATEMENT, (getIncomeStatementLink, jwt, {begin, end}) => ({\n  getIncomeStatementLink, jwt, begin, end\n}));\nexport const executeTransaction = createAction(EXECUTE_TRANSACTION,\n  (executeTransactionLink, jwt, {type, sourceId, destinationId, amount, description}) => (\n    {executeTransactionLink, jwt, type, sourceId, destinationId, amount, description})\n);\n\nconst accountantIndexSaga = createRequestSaga(ACCOUNTANT_INDEX, accountantApi.index);\nconst postAccountSaga = createRequestSaga(POST_ACCOUNT, accountantApi.postAccount);\nconst getAccountsSaga = createRequestSaga(GET_ACCOUNTS, accountantApi.getAccounts);\nconst getAccountSaga = createRequestSaga(GET_ACCOUNT, accountantApi.getAccount);\nconst changeNameSaga = createRequestSaga(CHANGE_NAME, accountantApi.changeName);\nconst changeBudgetSaga = createRequestSaga(CHANGE_BUDGET, accountantApi.changeBudget);\nconst deleteAccountSaga = createRequestSaga(DELETE_ACCOUNT, accountantApi.deleteAccount);\nconst getLedgerSaga = createRequestSaga(GET_LEDGER, accountantApi.getLedger);\nconst getBalanceSheetSaga = createRequestSaga(GET_BALANCE_SHEET, accountantApi.getBalanceSheet);\nconst getIncomeStatementSaga = createRequestSaga(GET_INCOME_STATEMENT, accountantApi.getIncomeStatement);\nconst executeTransactionSaga = createRequestSaga(EXECUTE_TRANSACTION, accountantApi.executeTransaction);\n\nexport function* accountantSaga() {\n  yield takeLatest(ACCOUNTANT_INDEX, accountantIndexSaga);\n  yield takeLatest(POST_ACCOUNT, postAccountSaga);\n  yield takeLatest(GET_ACCOUNTS, getAccountsSaga);\n  yield takeLatest(GET_ACCOUNT, getAccountSaga);\n  yield takeLatest(CHANGE_NAME, changeNameSaga);\n  yield takeLatest(CHANGE_BUDGET, changeBudgetSaga);\n  yield takeLatest(DELETE_ACCOUNT, deleteAccountSaga);\n  yield takeLatest(GET_LEDGER, getLedgerSaga);\n  yield takeLatest(GET_BALANCE_SHEET, getBalanceSheetSaga);\n  yield takeLatest(GET_INCOME_STATEMENT, getIncomeStatementSaga);\n  yield takeLatest(EXECUTE_TRANSACTION, executeTransactionSaga);\n}\n\nconst initialState = {\n  links: {\n    postAccount: null,\n    getAccounts: null,\n    executeTransaction: null,\n    getLedger: null,\n    getBalanceSheet: null,\n    getIncomeStatement: null,\n    clear: null\n  },\n  accountForm: {\n    type: '',\n    name: '',\n    money: ''\n  },\n  modifyForm: {\n    newName: '',\n    newBudget: ''\n  },\n  transactionForm: {\n    type: '',\n    sourceId: '',\n    destinationId: '',\n    amount: '',\n    description: ''\n  },\n  posted: null,\n  accounts: null,\n  account: null,\n  changed: null,\n  deleted: null,\n  ledger: null,\n  balanceSheet: null,\n  incomeStatement: null,\n  executed: null,\n  errorResponse: null\n}\n\nconst accountant = handleActions({\n    [CHANGE_FIELD]: (state, {payload: {form, key, value}}) => (\n      produce(state, draft => {\n        draft[form][key] = value;\n      })\n    ),\n    [INITIALIZE_FORM]: (state, {payload: form}) => ({\n      ...state,\n      [form]: initialState[form],\n      posted: null,\n      changed: null,\n      deleted: null,\n      executed: null\n    }),\n    [INITIALIZE_INCOME_STATEMENT]: (state) => ({\n      ...state,\n      incomeStatement: null\n    }),\n    [ACCOUNTANT_INDEX_SUCCESS]: (state, {payload: response}) => (\n      produce(state, draft => {\n        draft.links.postAccount = response.data._links.postAccount.href;\n        draft.links.getAccounts = response.data._links.getAccounts.href;\n        draft.links.executeTransaction = response.data._links.executeTransaction.href;\n        draft.links.getLedger = response.data._links.getLedger.href;\n        draft.links.getBalanceSheet = response.data._links.getBalanceSheet.href;\n        draft.links.getIncomeStatement = response.data._links.getIncomeStatement.href;\n        draft.links.clear = response.data._links.clear.href;\n        draft.errorResponse = null;\n      })\n    ),\n    [ACCOUNTANT_INDEX_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [POST_ACCOUNT_SUCCESS]: (state) => ({\n      ...state,\n      posted: true,\n      errorResponse: null\n    }),\n    [POST_ACCOUNT_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_ACCOUNTS_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      accounts: response.data.accounts,\n      errorResponse: null\n    }),\n    [GET_ACCOUNTS_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_ACCOUNT_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      account: response.data,\n      errorResponse: null\n    }),\n    [GET_ACCOUNT_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [CHANGE_NAME_SUCCESS]: (state) => ({\n      ...state,\n      changed: true,\n      errorResponse: null\n    }),\n    [CHANGE_NAME_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [CHANGE_BUDGET_SUCCESS]: (state) => ({\n      ...state,\n      changed: true,\n      errorResponse: null\n    }),\n    [CHANGE_BUDGET_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [DELETE_ACCOUNT_SUCCESS]: (state) => ({\n      ...state,\n      deleted: true,\n      errorResponse: null\n    }),\n    [DELETE_ACCOUNT_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_LEDGER_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      ledger: response.data,\n      errorResponse: null\n    }),\n    [GET_LEDGER_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_BALANCE_SHEET_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      balanceSheet: response.data,\n      errorResponse: null\n    }),\n    [GET_BALANCE_SHEET_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [GET_INCOME_STATEMENT_SUCCESS]: (state, {payload: response}) => ({\n      ...state,\n      incomeStatement: response.data,\n      errorResponse: null\n    }),\n    [GET_INCOME_STATEMENT_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    }),\n    [EXECUTE_TRANSACTION_SUCCESS]: (state) => ({\n      ...state,\n      executed: true,\n      errorResponse: null\n    }),\n    [EXECUTE_TRANSACTION_FAILURE]: (state, {payload: errorResponse}) => ({\n      ...state, errorResponse\n    })\n  }, initialState\n);\n\nexport default accountant;\n","import client from './client';\n\nexport const index = ({indexLink}) =>\n  client.get(indexLink);\n\nexport const postAccount = ({postAccountLink, jwt, type, name, money}) =>\n  client.post(postAccountLink, {type, name, money}, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getAccounts = ({getAccountsLink, jwt}) =>\n  client.get(getAccountsLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getAccount = ({getAccountLink, jwt}) =>\n  client.get(getAccountLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const changeName = ({changeNameLink, jwt, newName}) =>\n  client.put(changeNameLink, {newName}, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const changeBudget = ({changeBudgetLink, jwt, newBudget}) =>\n  client.put(changeBudgetLink, {newBudget}, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const deleteAccount = ({deleteAccountLink, jwt}) =>\n  client.delete(deleteAccountLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getLedger = ({getLedgerLink, jwt}) =>\n  client.get(getLedgerLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getBalanceSheet = ({getBalanceSheetLink, jwt}) =>\n  client.get(getBalanceSheetLink, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const getIncomeStatement = ({getIncomeStatementLink, jwt, begin, end}) =>\n  client.get(getIncomeStatementLink + `?beginDate=${begin}&inclusiveEndDate=${end}`, {headers: {'X-AUTH-TOKEN': jwt}});\n\nexport const executeTransaction = ({executeTransactionLink, jwt, type, sourceId, destinationId, amount, description}) =>\n  client.post(\n    executeTransactionLink, {type, sourceId, destinationId, amount, description}, {headers: {'X-AUTH-TOKEN': jwt}});\n","import React, {useEffect, useState} from 'react';\nimport AccountForm from \"../../components/accountant/AccountForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, initializeForm, postAccount} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport {withRouter} from \"react-router-dom\";\n\nfunction AccountFormContainer({history}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {form, postAccountLink, posted, errorResponse} = useSelector(({accountant}) => ({\n      form: accountant.accountForm,\n      postAccountLink: accountant.links.postAccount,\n      posted: accountant.posted,\n      errorResponse: accountant.errorResponse\n    })\n  );\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'accountForm', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {type, name, money} = form;\n    if ([type, name, money].includes('')) {\n      setErrorMessage(\"빈 칸을 모두 입력해 주세요.\");\n      return;\n    }\n    if (name.length > 8) {\n      setErrorMessage(\"계정 이름은 8자 이하여야 합니다.\");\n      return;\n    }\n    if (isNaN(money)) {\n      setErrorMessage(\"금액은 숫자여야 합니다.\");\n      return;\n    }\n    dispatch(postAccount(postAccountLink, jwt, {type, name, money}));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('accountForm'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (posted) {\n      history.push('/account-list');\n    }\n  }, [posted, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return (\n    <AccountForm\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\nexport default withRouter(AccountFormContainer);\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport {Redirect} from \"react-router-dom\";\nimport AccountFormContainer from \"../../containers/accountant/AccountFormContainer\";\n\nfunction AccountFormPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <CentralTemplate>\n      <AccountFormContainer/>\n    </CentralTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default AccountFormPage;\n","import React from 'react';\nimport './AccountList.scss';\nimport {Link} from \"react-router-dom\";\n\nfunction AccountItem({id, name}) {\n  return (\n    <div className={\"account-item\"}>\n      <Link to={`/account/${id}`}>{name}</Link>\n    </div>\n  );\n}\n\nfunction AccountList({accounts}) {\n  const [assets, liabilities, revenues, expenses] = [[], [], [], []];\n  accounts.forEach(account => {\n    const accountItem = <AccountItem key={account.id} id={account.id} name={account.name}/>;\n    switch (account.type) {\n      case \"Asset\":\n        assets.push(accountItem);\n        break;\n      case \"Liability\":\n        liabilities.push(accountItem);\n        break;\n      case \"Revenue\":\n        revenues.push(accountItem);\n        break;\n      case \"Expense\":\n        expenses.push(accountItem);\n        break;\n      default:\n        throw new Error(\"타입이 적절하지 않습니다.\");\n    }\n  });\n\n  return (\n    <div className={\"account-list\"}>\n      <h3>계정 목록</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>자산</th>\n            <td>{assets}</td>\n          </tr>\n          <tr>\n            <th>부채</th>\n            <td>{liabilities}</td>\n          </tr>\n          <tr>\n            <th>수입</th>\n            <td>{revenues}</td>\n          </tr>\n          <tr>\n            <th>지출</th>\n            <td>{expenses}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default AccountList;\n","import React from 'react';\nimport './Loading.scss';\n\nfunction Loading() {\n  return (\n    <div className={\"loading\"}>\n      대기 중...\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, {useEffect} from 'react';\nimport AccountList from \"../../components/accountant/AccountList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccounts, initializeForm} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\n\nfunction AccountListContainer() {\n  const dispatch = useDispatch();\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getAccountsLink, accounts, errorResponse} = useSelector(({accountant}) => ({\n    getAccountsLink: accountant.links.getAccounts,\n    accounts: accountant.accounts,\n    errorResponse: accountant.errorResponse\n  }));\n\n  useEffect(() => {\n    dispatch(getAccounts(getAccountsLink, jwt));\n    dispatch(initializeForm('modifyForm'));\n  }, [dispatch, getAccountsLink, jwt]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return accounts ? (\n    <AccountList\n      accounts={accounts}\n    />\n  ) : <Loading/>;\n}\n\nexport default AccountListContainer;\n","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\nimport AccountListContainer from \"../../containers/accountant/AccountListContainer\";\n\nfunction AccountListPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <PageTemplate>\n      <AccountListContainer/>\n    </PageTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default AccountListPage;\n","import React from 'react';\nimport './Account.scss';\n\nconst accountNameMap = {\n  Asset: '자산',\n  Liability: '부채',\n  Revenue: '수입',\n  Expense: '지출'\n};\n\nconst moneyNameMap = {\n  Asset: '잔액',\n  Liability: '잔액',\n  Revenue: '예산',\n  Expense: '예산'\n};\n\nconst transactionSignMap = {\n  INCREASE: '+',\n  DECREASE: '-',\n  OCCUR: ''\n};\n\nfunction TransactionItem({type, amount, description, createdAt}) {\n  return (\n    <tr>\n      <td className={\"date\"}>{createdAt.substring(5, 10)}</td>\n      <td className={\"amount\"}>{transactionSignMap[type]} {amount} 원</td>\n      <td className={\"description\"}>{description}</td>\n    </tr>\n  );\n}\n\nfunction Account({account, form, onChange, onSubmitName, onSubmitBudget, onClickDelete}) {\n  const typeName = accountNameMap[account.type];\n  const moneyName = moneyNameMap[account.type];\n  const transactions = account.singleTransactions.map((transaction, index) => (\n      <TransactionItem\n        key={index}\n        type={transaction.type}\n        amount={transaction.amount}\n        description={transaction.description}\n        createdAt={transaction.createdAt}\n      />\n    )\n  );\n  const isDeletable = (typeName === '수입' || typeName === '지출') || (account.moneyAmount === 0);\n\n  return (\n    <div className={\"account\"}>\n\n      <div className={\"info\"}>\n        <div><h3>{account.name}</h3><span>{typeName}</span></div>\n        <div className={\"money\"}>{moneyName}: {account.moneyAmount} 원</div>\n      </div>\n\n      <div className={\"configure\"}>\n        <div className={\"row\"}>\n          <h4>이름 변경</h4>\n          <form onSubmit={onSubmitName}>\n            <input\n              name={\"newName\"}\n              type={\"text\"}\n              placeholder={\"새 이름\"}\n              onChange={onChange}\n              value={form.newName}\n            />\n            <button type={\"submit\"}>변경</button>\n          </form>\n        </div>\n        {(moneyName === '예산') ?\n          <div className={\"row\"}>\n            <h4>예산 변경</h4>\n            <form onSubmit={onSubmitBudget}>\n              <input\n                name={\"newBudget\"}\n                type={\"text\"}\n                placeholder={\"새 예산\"}\n                onChange={onChange}\n                value={form.newBudget}\n              />\n              <button type={\"submit\"}>변경</button>\n            </form>\n          </div>\n          : <></>}\n        <div className={\"row\"}>\n          <h4>계정 삭제</h4>\n          {isDeletable ?\n            <button onClick={onClickDelete}>삭제</button>\n            : (\n              <div className={\"not-deletable\"}>\n                <span>잔액이 존재합니다.</span>\n                <button>삭제</button>\n              </div>\n            )\n          }\n        </div>\n      </div>\n\n      <div className={\"transactions\"}>\n        <h3>거래 기록</h3><span>총 {transactions.length} 건</span>\n        <table>\n          <tbody>{transactions}</tbody>\n        </table>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Account;\n","import React, {useEffect} from 'react';\nimport Account from \"../../components/accountant/Account\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeBudget, changeField, changeName, deleteAccount, getAccount} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\nimport {withRouter} from \"react-router-dom\";\n\nfunction AccountContainer({id, history}) {\n  const dispatch = useDispatch();\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {accounts, account, form, changed, deleted, errorResponse} = useSelector(({accountant}) => ({\n    accounts: accountant.accounts,\n    account: accountant.account,\n    form: accountant.modifyForm,\n    changed: accountant.changed,\n    deleted: accountant.deleted,\n    errorResponse: accountant.errorResponse\n  }));\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'modifyForm', key: name, value: value}));\n  };\n\n  // TODO 경고 메시지\n  const onSubmitName = (e) => {\n    e.preventDefault();\n    const {newName} = form;\n    if (newName === '') {\n      alert(\"새 이름을 입력해 주세요.\");\n      return;\n    }\n    if (newName.length > 8) {\n      alert(\"계정 이름은 8자 이하여야 합니다.\");\n      return;\n    }\n    dispatch(changeName(account._links.changeName.href, jwt, {newName}));\n  };\n\n  const onSubmitBudget = (e) => {\n    e.preventDefault();\n    const {newBudget} = form;\n    if (newBudget === '') {\n      alert(\"새 예산을 입력해 주세요.\");\n      return;\n    }\n    if (isNaN(newBudget)) {\n      alert(\"금액은 숫자여야 합니다.\");\n      return;\n    }\n    dispatch(changeBudget(account._links.changeBudget.href, jwt, {newBudget}));\n  };\n\n  const onClickDelete = () => {\n    if (window.confirm(\"정말로 삭제하시겠습니까?\")) {\n      dispatch(deleteAccount(account._links.deleteAccount.href, jwt));\n    }\n  };\n\n  useEffect(() => {\n    const simpleAccount = accounts.filter(account => account.id === Number(id))[0];\n    dispatch(getAccount(simpleAccount._links.self.href, jwt));\n  }, [dispatch, accounts, id, jwt]);\n\n  useEffect(() => {\n    if (changed) {\n      history.push('/account-list');\n    }\n  }, [changed, history]);\n\n  useEffect(() => {\n    if (deleted) {\n      history.push('/account-list');\n    }\n  }, [deleted, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return account ? (\n    <Account\n      account={account}\n      form={form}\n      onChange={onChange}\n      onSubmitName={onSubmitName}\n      onSubmitBudget={onSubmitBudget}\n      onClickDelete={onClickDelete}\n    />\n  ) : <Loading/>;\n}\n\nexport default withRouter(AccountContainer);\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport AccountContainer from \"../../containers/accountant/AccountContainer\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\n\nfunction AccountPage({match}) {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {accounts} = useSelector(({accountant}) => ({accounts: accountant.accounts}));\n\n  if (!jwt) return <Redirect to={\"/login\"}/>;\n  if (!accounts) return <Redirect to={\"/account-list\"}/>\n  return (\n    <PageTemplate>\n      <AccountContainer id={match.params.id}/>\n    </PageTemplate>\n  );\n}\n\nexport default AccountPage;\n","import React from 'react';\nimport './TransactionForm.scss';\n\nconst typeNameMap = {\n  'Asset': '자산',\n  'Liability': '부채',\n  'Revenue': '수입',\n  'Expense': '지출'\n};\n\nfunction TransactionForm({accounts, form, onChange, onSubmit, errorMessage}) {\n  const [sources, destinations] = [[], []];\n  const setOptions = (srcType, dstType) => {\n    sources.push(<option key={0} value={\"\"} className={\"default\"}>({typeNameMap[srcType]})</option>);\n    destinations.push(<option key={0} value={\"\"} className={\"default\"}>({typeNameMap[dstType]})</option>);\n    accounts.forEach(account => {\n      const items = <option key={account.id} value={account.id}>{account.name}</option>;\n      if (account.type === srcType) sources.push(items);\n      if (account.type === dstType) destinations.push(items);\n    });\n  };\n\n  switch (form.type) {\n    case \"SELL\":\n      setOptions('Revenue', 'Asset');\n      break;\n    case \"PURCHASE_BY_CASH\":\n      setOptions('Asset', 'Expense');\n      break;\n    case \"PURCHASE_BY_CREDIT\":\n      setOptions('Liability', 'Expense');\n      break;\n    case \"BORROW\":\n      setOptions('Liability', 'Asset');\n      break;\n    case \"REPAY\":\n      setOptions('Asset', 'Liability');\n      break;\n    case \"TRANSFER\":\n      setOptions('Asset', 'Asset');\n      break;\n    default:\n      sources.push(<option key={0} value={\"\"} className={\"default\"}>출발</option>);\n      destinations.push(<option key={0} value={\"\"} className={\"default\"}>도착</option>);\n  }\n\n  return (\n    <div className={\"transaction-form\"}>\n      <form onSubmit={onSubmit}>\n        <div className={\"radio-area\"}>\n          <input name={\"type\"} type={\"radio\"} value={\"SELL\"} id={\"sell\"} onChange={onChange}/>\n          <label htmlFor={\"sell\"}>판매</label>\n          <input name={\"type\"} type={\"radio\"} value={\"PURCHASE_BY_CASH\"} id={\"cash\"} onChange={onChange}/>\n          <label htmlFor={\"cash\"}>현금구매</label>\n          <input name={\"type\"} type={\"radio\"} value={\"PURCHASE_BY_CREDIT\"} id={\"credit\"} onChange={onChange}/>\n          <label htmlFor={\"credit\"}>신용구매</label>\n          <input name={\"type\"} type={\"radio\"} value={\"BORROW\"} id={\"borrow\"} onChange={onChange}/>\n          <label htmlFor={\"borrow\"}>대출</label>\n          <input name={\"type\"} type={\"radio\"} value={\"REPAY\"} id={\"repay\"} onChange={onChange}/>\n          <label htmlFor={\"repay\"}>상환</label>\n          <input name={\"type\"} type={\"radio\"} value={\"TRANSFER\"} id={\"transfer\"} onChange={onChange}/>\n          <label htmlFor={\"transfer\"}>이동</label>\n        </div>\n        <div className={\"select-area\"}>\n          <select name={\"sourceId\"} onChange={onChange}>\n            {sources}\n          </select>\n          <select name={\"destinationId\"} onChange={onChange}>\n            {destinations}\n          </select>\n        </div>\n        <div className={\"input-area\"}>\n          <input\n            name={\"amount\"}\n            type={\"text\"}\n            placeholder={\"금액\"}\n            onChange={onChange}\n            value={form.amount}\n          />\n          <input\n            name={\"description\"}\n            type={\"text\"}\n            placeholder={\"설명\"}\n            onChange={onChange}\n            value={form.description}\n          />\n        </div>\n        {errorMessage ? <div className={\"error\"}>{errorMessage}</div> : <></>}\n        <button>거래 등록</button>\n      </form>\n    </div>\n  );\n}\n\nexport default TransactionForm;\n","import React, {useEffect, useState} from 'react';\nimport TransactionForm from \"../../components/accountant/TransactionForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeField, executeTransaction, getAccounts, initializeForm} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\nimport {withRouter} from \"react-router-dom\";\n\nfunction TransactionFormContainer({history}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getAccountsLink, accounts, form, executeTransactionLink, executed, errorResponse}\n    = useSelector(({accountant}) => ({\n    getAccountsLink: accountant.links.getAccounts,\n    accounts: accountant.accounts,\n    form: accountant.transactionForm,\n    executeTransactionLink: accountant.links.executeTransaction,\n    executed: accountant.executed,\n    errorResponse: accountant.errorResponse\n  }));\n\n  const onChange = (e) => {\n    const {name, value} = e.target;\n    dispatch(changeField({form: 'transactionForm', key: name, value: value}));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const {type, sourceId, destinationId, amount, description} = form;\n    if ([type, sourceId, destinationId, amount, description].includes('')) {\n      setErrorMessage(\"빈 칸을 모두 입력해 주세요.\");\n      return;\n    }\n    if (isNaN(amount)) {\n      setErrorMessage(\"금액은 숫자여야 합니다.\");\n      return;\n    }\n    dispatch(executeTransaction(executeTransactionLink, jwt, {type, sourceId, destinationId, amount, description}));\n  };\n\n  useEffect(() => {\n    dispatch(getAccounts(getAccountsLink, jwt));\n    dispatch(initializeForm('transactionForm'));\n  }, [dispatch, getAccountsLink, jwt]);\n\n  useEffect(() => {\n    if (executed) {\n      history.push('/ledger');\n    }\n  }, [executed, history]);\n\n  // TODO 클린업 조건 확인\n  // TODO 다른 컴포넌트에 클린업 적용\n  useEffect(() => {\n    return () => {\n      dispatch(initializeForm('transactionForm'));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse))\n    }\n  }, [errorResponse]);\n\n  return accounts ? (\n    <TransactionForm\n      accounts={accounts}\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  ) : <Loading/>;\n}\n\nexport default withRouter(TransactionFormContainer);\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\nimport TransactionFormContainer from \"../../containers/accountant/TransactionFormContainer\";\n\nfunction TransactionPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <CentralTemplate>\n      <TransactionFormContainer/>\n    </CentralTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default TransactionPage;\n","import React from 'react';\nimport './Ledger.scss';\n\nconst transactionNameMap = {\n  SELL: '판매',\n  PURCHASE_BY_CASH: '현금',\n  PURCHASE_BY_CREDIT: '신용',\n  BORROW: '대출',\n  REPAY: '상환',\n  TRANSFER: '이동'\n};\n\nfunction TransactionItem({type, amount, debit, credit, description, createdAt}) {\n  return (\n    <tr>\n      <td className={\"date\"}>{createdAt.substring(5, 10)}</td>\n      <td className={\"transaction-name\"}>{transactionNameMap[type]}</td>\n      <td className={\"account-name\"}>{debit}</td>\n      <td className={\"account-name\"}>{credit}</td>\n      <td className={\"amount\"}>{amount} 원</td>\n      <td className={\"description\"}>{description}</td>\n    </tr>\n  );\n}\n\nfunction Ledger({ledger}) {\n  const transactions = ledger.doubleTransactions.map((transaction, index) => (\n      <TransactionItem\n        key={index}\n        type={transaction.type}\n        amount={transaction.amount}\n        debit={transaction.debit}\n        credit={transaction.credit}\n        description={transaction.description}\n        createdAt={transaction.createdAt}\n      />\n    )\n  );\n\n  return (\n    <div className={\"ledger\"}>\n      <h3>장부</h3> <span>총 {transactions.length} 건</span>\n      <div className={\"transactions\"}>\n        <table>\n          <thead>\n            <tr>\n              <th>날짜</th>\n              <th>종류</th>\n              <th>출발</th>\n              <th>도착</th>\n              <th>금액</th>\n              <th className={\"description\"}>설명</th>\n            </tr>\n          </thead>\n          <tbody>\n            {transactions}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Ledger;\n","import React, {useEffect} from 'react';\nimport Ledger from \"../../components/accountant/Ledger\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getLedger} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\n\nfunction LedgerContainer() {\n  const dispatch = useDispatch();\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getLedgerLink, ledger, errorResponse} = useSelector(({accountant}) => ({\n    getLedgerLink: accountant.links.getLedger,\n    ledger: accountant.ledger,\n    errorResponse: accountant.errorResponse\n  }));\n\n  useEffect(() => {\n    dispatch(getLedger(getLedgerLink, jwt));\n  }, [dispatch, getLedgerLink, jwt]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return ledger ? (\n    <Ledger\n      ledger={ledger}\n    />\n  ) : <Loading/>;\n}\n\nexport default LedgerContainer;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport LedgerContainer from \"../../containers/accountant/LedgerContainer\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\n\nfunction LedgerPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <PageTemplate>\n      <LedgerContainer/>\n    </PageTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default LedgerPage;\n","import React from 'react';\nimport './BalanceSheet.scss';\n\nfunction AccountItem({account}) {\n  return (\n    <tr>\n      <td>{account.name}</td>\n      <td className={\"balance\"}>{account.balance} 원</td>\n    </tr>\n  );\n}\n\nfunction BalanceSheet({balanceSheet}) {\n  const assets = balanceSheet.assets.map(asset =>\n    <AccountItem key={asset.id} account={asset}/>);\n  const liabilities = balanceSheet.liabilities.map(liability =>\n    <AccountItem key={liability.id} account={liability}/>);\n\n  return (\n    <div className={\"balance-sheet\"}>\n      <h3>재무상태표</h3>\n      <div className={\"net\"}>\n        순 자산 &nbsp; {balanceSheet.total.net} 원\n      </div>\n      <div className={\"detail\"}>\n        <table>\n          <thead>\n            <tr>\n              <th>자산</th>\n              <th>{balanceSheet.total.assetSum} 원</th>\n            </tr>\n          </thead>\n          <tbody>\n            {assets}\n          </tbody>\n        </table>\n        <div className={\"vertical-line\"}/>\n        <table>\n          <thead>\n            <tr>\n              <th>부채</th>\n              <th>{balanceSheet.total.liabilitySum} 원</th>\n            </tr>\n          </thead>\n          <tbody>\n            {liabilities}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default BalanceSheet;\n","import React, {useEffect} from 'react';\nimport BalanceSheet from \"../../components/accountant/BalanceSheet\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getBalanceSheet} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport Loading from \"../../components/common/Loading\";\n\nfunction BalanceSheetContainer() {\n  const dispatch = useDispatch();\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getBalanceSheetLink, balanceSheet, errorResponse} = useSelector(({accountant}) => ({\n    getBalanceSheetLink: accountant.links.getBalanceSheet,\n    balanceSheet: accountant.balanceSheet,\n    errorResponse: accountant.errorResponse\n  }));\n\n  useEffect(() => {\n    dispatch(getBalanceSheet(getBalanceSheetLink, jwt));\n  }, [dispatch, getBalanceSheetLink, jwt]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      alert(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n  return balanceSheet ? (\n      <BalanceSheet\n        balanceSheet={balanceSheet}\n      />\n  ) : <Loading/>;\n}\n\nexport default BalanceSheetContainer;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\nimport BalanceSheetContainer from \"../../containers/accountant/BalanceSheetContainer\";\n\nfunction BalanceSheetPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <PageTemplate>\n      <BalanceSheetContainer/>\n    </PageTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default BalanceSheetPage;\n","import React from 'react';\nimport './IncomeStatementForm.scss';\n\nfunction IncomeStatementForm({onSubmit, errorMessage}) {\n  return (\n    <div className={\"income-statement-form\"}>\n      <h3>손익계산서 요청</h3>\n      <form onSubmit={onSubmit}>\n        <div className={\"date-area\"}>\n          <label> 시작\n            <input\n              name={\"beginDate\"}\n              type={\"date\"}\n            />\n          </label>\n          <label> 종료\n            <input\n              name={\"inclusiveEndDate\"}\n              type={\"date\"}\n            />\n          </label>\n        </div>\n        {errorMessage ? <div className={\"error\"}>{errorMessage}</div> : <></>}\n        <button>손익계산서 요청</button>\n      </form>\n    </div>\n  );\n}\n\nexport default IncomeStatementForm;\n","import React, {useEffect, useState} from 'react';\nimport IncomeStatementForm from \"../../components/accountant/IncomeStatementForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getIncomeStatement, initializeIncomeStatement} from \"../../modules/accountant\";\nimport toErrorMessage from \"../../lib/error/toErrorMessage\";\nimport {withRouter} from \"react-router-dom\";\n\nfunction IncomeStatementFormContainer({history}) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {getIncomeStatementLink, incomeStatement, errorResponse} = useSelector(({accountant}) => ({\n      getIncomeStatementLink: accountant.links.getIncomeStatement,\n      incomeStatement: accountant.incomeStatement,\n      errorResponse: accountant.errorResponse\n    })\n  );\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const [beginDate, inclusiveEndDate] = e.target;\n    const begin = beginDate.value;\n    const end = inclusiveEndDate.value;\n    if ([begin, end].includes('')) {\n      setErrorMessage('날짜를 입력해 주세요.');\n      return;\n    }\n    dispatch(getIncomeStatement(getIncomeStatementLink, jwt, {begin, end}));\n  };\n\n  useEffect(() => {\n    dispatch(initializeIncomeStatement());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (incomeStatement) {\n      history.push('/income-statement');\n    }\n  }, [incomeStatement, history]);\n\n  useEffect(() => {\n    if (errorResponse) {\n      setErrorMessage(toErrorMessage(errorResponse));\n    }\n  }, [errorResponse]);\n\n\n  return (\n    <IncomeStatementForm\n      onSubmit={onSubmit}\n      errorMessage={errorMessage}\n    />\n  );\n}\n\nexport default withRouter(IncomeStatementFormContainer);\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport IncomeStatementFormContainer from \"../../containers/accountant/IncomeStatementFormContainer\";\nimport {Redirect} from \"react-router-dom\";\nimport CentralTemplate from \"../../components/common/CentralTemplate\";\n\nfunction IncomeStatementFormPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  return jwt ?\n    <CentralTemplate>\n      <IncomeStatementFormContainer/>\n    </CentralTemplate>\n    : <Redirect to={\"/login\"}/>;\n}\n\nexport default IncomeStatementFormPage;\n","import React from 'react';\nimport './IncomeStatement.scss';\n\nfunction AccountItem({account}) {\n  return (\n    <tr>\n      <td>{account.name}</td>\n      <td className={\"occurred\"}>{account.occurred} 원</td>\n      <td className={\"monthly-budget\"}>{account.monthlyBudget} 원</td>\n    </tr>\n  );\n}\n\nfunction IncomeStatement({incomeStatement}) {\n  const revenues = incomeStatement.revenues.map(revenue => <AccountItem key={revenue.id} account={revenue}/>);\n  const expenses = incomeStatement.expenses.map(expense => <AccountItem key={expense.id} account={expense}/>);\n\n  return (\n    <div className={\"income-statement\"}>\n      <div className={\"heading\"}>\n        <h3>손익계산서</h3>\n        <span>{incomeStatement.start} ~ {incomeStatement.inclusiveEnd} ({incomeStatement.days}일)</span>\n      </div>\n      <div className={\"profit\"}>\n        이익 &nbsp; {incomeStatement.total.profit} 원\n      </div>\n      <div className={\"detail\"}>\n        <table>\n          <thead>\n            <tr>\n              <th>수입</th>\n              <th>{incomeStatement.total.revenueSum} 원</th>\n              <th className={\"monthly-budget\"}>예산</th>\n            </tr>\n          </thead>\n          <tbody>\n            {revenues}\n          </tbody>\n        </table>\n        <div className={\"vertical-line\"}/>\n        <table>\n          <thead>\n            <tr>\n              <th>지출</th>\n              <th>{incomeStatement.total.expenseSum} 원</th>\n              <th className={\"monthly-budget\"}>예산</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default IncomeStatement;\n","import React from 'react';\nimport IncomeStatement from \"../../components/accountant/IncomeStatement\";\nimport {useSelector} from \"react-redux\";\n\nfunction IncomeStatementContainer() {\n  const {incomeStatement} = useSelector(({accountant}) => ({incomeStatement: accountant.incomeStatement}));\n\n  return (\n    <IncomeStatement\n      incomeStatement={incomeStatement}\n    />\n  );\n}\n\nexport default IncomeStatementContainer;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport PageTemplate from \"../../components/common/PageTemplate\";\nimport IncomeStatementContainer from \"../../containers/accountant/IncomeStatementContainer\";\n\nfunction IncomeStatementPage() {\n  const {jwt} = useSelector(({member}) => ({jwt: member.jwt}));\n  const {incomeStatement} = useSelector(({accountant}) => ({incomeStatement: accountant.incomeStatement}));\n\n  if (!jwt) return <Redirect to={\"/login\"}/>;\n  if (!incomeStatement) return <Redirect to={\"/income-statement-form\"}/>;\n  return (\n    <PageTemplate>\n      <IncomeStatementContainer/>\n    </PageTemplate>\n  );\n}\n\nexport default IncomeStatementPage;\n","import React from 'react';\nimport './NotFound.scss';\n\nfunction NotFound() {\n  return (\n    <div className={\"not-found\"}>\n      요청하신 페이지를 찾을 수 없습니다.\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport PageTemplate from \"../components/common/PageTemplate\";\nimport NotFound from \"../components/NotFound\";\n\nfunction NotFoundPage() {\n  return (\n    <PageTemplate>\n      <NotFound/>\n    </PageTemplate>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport './ServiceInformation.scss';\n\nfunction ServiceInformation() {\n  return (\n    <div className={\"service-information\"}>\n      ⓒ 2021. suloginscene@gmail.com.\n    </div>\n  );\n}\n\nexport default ServiceInformation;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport NavigationContainer from \"./containers/common/NavigationContainer\";\nimport HomePage from \"./pages/HomePage\";\nimport SignupPage from \"./pages/member/SignupPage\";\nimport VerifyPage from \"./pages/member/VerifyPage\";\nimport LoginPage from \"./pages/member/LoginPage\";\nimport MyPage from \"./pages/member/MyPage\";\nimport ForgetPage from \"./pages/member/ForgetPage\";\nimport AccountFormPage from \"./pages/accountant/AccountFormPage\";\nimport AccountListPage from \"./pages/accountant/AccountListPage\";\nimport AccountPage from \"./pages/accountant/AccountPage\";\nimport TransactionPage from \"./pages/accountant/TransactionPage\";\nimport LedgerPage from \"./pages/accountant/LedgerPage\";\nimport BalanceSheetPage from \"./pages/accountant/BalanceSheetPage\";\nimport IncomeStatementFormPage from \"./pages/accountant/IncomeStatementFormPage\";\nimport IncomeStatementPage from \"./pages/accountant/IncomeStatementPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport ServiceInformation from \"./components/common/ServiceInformation\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n\n      <header>\n        <NavigationContainer/>\n      </header>\n\n      <main>\n        <Switch>\n          <Route component={HomePage} path={\"/\"} exact/>\n\n          <Route component={SignupPage} path={\"/signup\"} exact/>\n          <Route component={VerifyPage} path={\"/verify\"} exact/>\n          <Route component={LoginPage} path={\"/login\"} exact/>\n          <Route component={MyPage} path={\"/my-page\"} exact/>\n          <Route component={ForgetPage} path={\"/forget\"} exact/>\n\n          <Route component={AccountFormPage} path={\"/account-form\"} exact/>\n          <Route component={AccountListPage} path={\"/account-list\"} exact/>\n          <Route component={AccountPage} path={\"/account/:id\"}/>\n          <Route component={TransactionPage} path={\"/transaction\"} exact/>\n\n          <Route component={LedgerPage} path={\"/ledger\"} exact/>\n          <Route component={BalanceSheetPage} path={\"/balance-sheet\"} exact/>\n          <Route component={IncomeStatementFormPage} path={\"/income-statement-form\"} exact/>\n          <Route component={IncomeStatementPage} path={\"/income-statement\"} exact/>\n\n          <Route component={NotFoundPage}/>\n        </Switch>\n      </main>\n\n      <footer>\n        <ServiceInformation/>\n      </footer>\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport {all} from 'redux-saga/effects';\nimport member, {memberSaga} from './member';\nimport accountant, {accountantSaga} from './accountant';\nimport loading from './loading';\n\nconst rootReducer = combineReducers({\n  member, accountant, loading\n});\n\nexport function* rootSaga() {\n  yield all([memberSaga(), accountantSaga()]);\n}\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {applyMiddleware, createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, {rootSaga} from \"./modules\";\nimport {memberIndex, setJwt} from \"./modules/member\";\nimport {accountantIndex} from \"./modules/accountant\";\nimport {accountantServer, memberServer} from './properties';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nconst loadIndex = () => {\n  store.dispatch(memberIndex(memberServer + '/api'));\n  store.dispatch(accountantIndex(accountantServer + '/api'));\n};\nconst loadUser = () => {\n  const jwt = localStorage.getItem('jwt');\n  if (jwt) store.dispatch(setJwt(jwt));\n};\n\nsagaMiddleware.run(rootSaga);\nloadIndex();\nloadUser();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}